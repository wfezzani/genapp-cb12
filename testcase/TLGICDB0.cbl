       PROCESS NODLL,NODYNAM,TEST(NOSEP),NOCICS,NOSQL,PGMN(LU)
      *+---------------------------------------------------------------+
      *| TLGICDB0                                                      |
      *| PRODUCT: IBM DEVELOPER FOR Z/OS                               |
      *| COMPONENT: IBM Z/OS AUTOMATED UNIT TESTING FRAMEWORK (ZUNIT)  |
      *|   FOR ENTERPRISE COBOL AND PL/I                               |
      *| PROGRAM: ENTERPRISE COBOL ZUNIT TEST CASE FOR DYNAMIC RUNNER  |
      *| DATE GENERATED: 11/02/2023 11:28                              |
      *| ID: 974fd65b-2f35-4a9d-bc09-63b28005769e                      |
      *+---------------------------------------------------------------+
      *+---------------------------------------------------------------+
      *| TEST_TEST1                                                    |
      *|     THIS PROGRAM IS FOR TEST TEST1                            |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'TEST_TEST1'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'LGICDB01'.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 BZUGETEP          PIC X(8) VALUE 'BZUGETEP'.
       01 AZ-EP-PTR         USAGE IS POINTER.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       01 AZ-RC-WORK             PIC S9(4) USAGE BINARY.
       1 AZ-TEST-EXPECTED-DATA-VALUE.
          3 AZU00000000.
            5 PIC X(6) DISPLAY VALUE '01ICUS'.
          3 AZU00000001.
            5 PIC X(10) VALUE X'C195849985A640404040'.
          3 AZU00000002.
            5 PIC X(5) DISPLAY VALUE 'Pandy'.
            5 PIC X(5) DISPLAY VALUE SPACES.
          3 AZU00000003.
            5 PIC X(10) DISPLAY VALUE SPACES.
          3 AZU00000004.
            5 PIC X(10) DISPLAY VALUE '1950-07-11'.
            5 PIC X(16) DISPLAY VALUE SPACES.
          3 AZU00000005.
            5 PIC X(10) VALUE X'40404040F3F44040D7C9'.
          3 AZU00000006.
            5 PIC X(10) DISPLAY VALUE '101OO 0000'.
          3 AZU00000007.
            5 PIC X(6) VALUE X'F7F7F9F940F1'.
          3 AZU00000008.
            5 PIC X(10) VALUE X'F2F3F4F5F64040404040'.
          3 AZU00000009.
            5 PIC X(10) DISPLAY VALUE '   01962 8'.
          3 AZU0000000A.
            5 PIC X(8) VALUE X'F1F1F2F3F4404040'.
          3 AZU0000000B.
            5 PIC X(8) VALUE X'4040404040C14BD7'.
          3 AZU0000000C.
            5 PIC X(18) DISPLAY VALUE 'andy@beebhouse.com'.
            5 PIC X(237) DISPLAY VALUE SPACES.
          3 AZU0000000D.
            5 PIC X(255) DISPLAY VALUE SPACES.
          3 AZU0000000E.
            5 PIC X(31854) DISPLAY VALUE SPACES.
       01 AZ-COMPARE.
         03 AZ-COMPARE-ITEM-NAME-PTR  POINTER.
         03 AZ-COMPARE-ITEM-NAME-LEN  PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-EXP-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-EXP-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-ITEM-NAME-S            PIC S9(8) COMP.
         03 AZ-ITEM-NAME-LEN          PIC S9(8) COMP.
       LOCAL-STORAGE SECTION.
       1 AZ-COMPARE-ITEM-NAMES.
         3 AZU0000000F.
            5 PIC X(20) DISPLAY VALUE 'CA-REQUEST-ID OF DFH'.
            5 PIC X(8) DISPLAY VALUE 'COMMAREA'.
         3 AZU00000011.
            5 PIC X(20) DISPLAY VALUE 'CA-RETURN-CODE OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU00000013.
            5 PIC X(20) DISPLAY VALUE 'CA-CUSTOMER-NUM OF D'.
            5 PIC X(10) DISPLAY VALUE 'FHCOMMAREA'.
         3 AZU00000015.
            5 PIC X(20) DISPLAY VALUE 'CA-POLICY-NUM OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-REQUEST OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU00000017.
            5 PIC X(20) DISPLAY VALUE 'CA-ISSUE-DATE OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-COMMON OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-REQUEST OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU00000019.
            5 PIC X(20) DISPLAY VALUE 'CA-EXPIRY-DATE OF CA'.
            5 PIC X(20) DISPLAY VALUE '-POLICY-COMMON OF CA'.
            5 PIC X(20) DISPLAY VALUE '-POLICY-REQUEST OF D'.
            5 PIC X(10) DISPLAY VALUE 'FHCOMMAREA'.
         3 AZU0000001B.
            5 PIC X(20) DISPLAY VALUE 'CA-LASTCHANGED OF CA'.
            5 PIC X(20) DISPLAY VALUE '-POLICY-COMMON OF CA'.
            5 PIC X(20) DISPLAY VALUE '-POLICY-REQUEST OF D'.
            5 PIC X(10) DISPLAY VALUE 'FHCOMMAREA'.
         3 AZU0000001D.
            5 PIC X(20) DISPLAY VALUE 'CA-BROKERID OF CA-PO'.
            5 PIC X(20) DISPLAY VALUE 'LICY-COMMON OF CA-PO'.
            5 PIC X(20) DISPLAY VALUE 'LICY-REQUEST OF DFHC'.
            5 PIC X(7) DISPLAY VALUE 'OMMAREA'.
         3 AZU0000001F.
            5 PIC X(20) DISPLAY VALUE 'CA-BROKERSREF OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-COMMON OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-REQUEST OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU00000021.
            5 PIC X(20) DISPLAY VALUE 'CA-PAYMENT OF CA-POL'.
            5 PIC X(20) DISPLAY VALUE 'ICY-COMMON OF CA-POL'.
            5 PIC X(20) DISPLAY VALUE 'ICY-REQUEST OF DFHCO'.
            5 PIC X(6) DISPLAY VALUE 'MMAREA'.
         3 AZU00000023.
            5 PIC X(20) DISPLAY VALUE 'CA-C-NUM OF CA-CLAIM'.
            5 PIC X(20) DISPLAY VALUE ' OF CA-POLICY-REQUES'.
            5 PIC X(16) DISPLAY VALUE 'T OF DFHCOMMAREA'.
         3 AZU00000025.
            5 PIC X(20) DISPLAY VALUE 'CA-C-DATE OF CA-CLAI'.
            5 PIC X(20) DISPLAY VALUE 'M OF CA-POLICY-REQUE'.
            5 PIC X(17) DISPLAY VALUE 'ST OF DFHCOMMAREA'.
         3 AZU00000027.
            5 PIC X(20) DISPLAY VALUE 'CA-C-PAID OF CA-CLAI'.
            5 PIC X(20) DISPLAY VALUE 'M OF CA-POLICY-REQUE'.
            5 PIC X(17) DISPLAY VALUE 'ST OF DFHCOMMAREA'.
         3 AZU00000029.
            5 PIC X(20) DISPLAY VALUE 'CA-C-VALUE OF CA-CLA'.
            5 PIC X(20) DISPLAY VALUE 'IM OF CA-POLICY-REQU'.
            5 PIC X(18) DISPLAY VALUE 'EST OF DFHCOMMAREA'.
         3 AZU0000002B.
            5 PIC X(20) DISPLAY VALUE 'CA-C-CAUSE OF CA-CLA'.
            5 PIC X(20) DISPLAY VALUE 'IM OF CA-POLICY-REQU'.
            5 PIC X(18) DISPLAY VALUE 'EST OF DFHCOMMAREA'.
         3 AZU0000002D.
            5 PIC X(20) DISPLAY VALUE 'CA-C-OBSERVATIONS OF'.
            5 PIC X(20) DISPLAY VALUE ' CA-CLAIM OF CA-POLI'.
            5 PIC X(20) DISPLAY VALUE 'CY-REQUEST OF DFHCOM'.
            5 PIC X(5) DISPLAY VALUE 'MAREA'.
         3 AZU0000002F.
            5 PIC X(20) DISPLAY VALUE 'CA-C-FILLER OF CA-CL'.
            5 PIC X(20) DISPLAY VALUE 'AIM OF CA-POLICY-REQ'.
            5 PIC X(19) DISPLAY VALUE 'UEST OF DFHCOMMAREA'.
       1 AZ-COMPARE-WORK-ITEMS.
          3 AZU00000010 PIC X(6) OCCURS 2.
          3 AZU00000012 PIC 9(2) OCCURS 2.
          3 AZU00000014 PIC 9(10) OCCURS 2.
          3 AZU00000016 PIC X(20) OCCURS 2.
          3 AZU00000018 PIC X(10) OCCURS 2.
          3 AZU0000001A PIC X(10) OCCURS 2.
          3 AZU0000001C PIC X(26) OCCURS 2.
          3 AZU0000001E PIC X(20) OCCURS 2.
          3 AZU00000020 PIC X(10) OCCURS 2.
          3 AZU00000022 PIC X(12) OCCURS 2.
          3 AZU00000024 PIC X(20) OCCURS 2.
          3 AZU00000026 PIC X(10) OCCURS 2.
          3 AZU00000028 PIC X(16) OCCURS 2.
          3 AZU0000002A PIC X(16) OCCURS 2.
          3 AZU0000002C PIC X(255) OCCURS 2.
          3 AZU0000002E PIC X(255) OCCURS 2.
          3 AZU00000030 PIC X(31854) OCCURS 2.
       01 AZ-CONVERT.
         03 AZ-CONVERT-HEXIN  PIC X(1).
         03 AZ-CONVERT-HEXVAL PIC X(2).
         03 AZ-HEXSTR PIC X(16) VALUE "0123456789ABCDEF".
         03 AZ-DEC  PIC S9(4) COMP VALUE 0.
         03 FILLER REDEFINES AZ-DEC.
           05 FILLER PIC X.
           05 AZ-DECBYTE PIC X.
         03 AZ-I PIC S9(8) COMP.
         03 AZ-J PIC S9(8) COMP.
         03 AZ-K PIC S9(8) COMP.
         03 AZ-Q PIC S9(8) COMP.
         03 AZ-R PIC S9(8) COMP.
         03 AZ-Q1 PIC S9(8) COMP.
         03 AZ-R1 PIC S9(8) COMP.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
       01 AZ-PROC-PTR       USAGE IS PROCEDURE-POINTER.
       01 AZ-COMPARE-ITEM-NAME      PIC X(1000).
       01 AZ-COMPARE-ITEM-VALUE     PIC X(254).
       01 AZ-COMPARE-ITEM-EXP-VALUE PIC X(254).
      *  *** DFHEIBLK : ZUT0000008B
       1 ZUT0000008B.
      *    *** EIBTIME : ZUT0000008C
         2 ZUT0000008C PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000008D
         2 ZUT0000008D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000008E
         2 ZUT0000008E PICTURE X(4).
      *    *** EIBTASKN : ZUT0000008F
         2 ZUT0000008F PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT00000090
         2 ZUT00000090 PICTURE X(4).
      *    *** DFHEIGDI : ZUT00000091
         2 ZUT00000091 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000092
         2 ZUT00000092 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000093
         2 ZUT00000093 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000094
         2 ZUT00000094 PICTURE X(1).
      *    *** EIBFN : ZUT00000095
         2 ZUT00000095 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000096
         2 ZUT00000096 PICTURE X(6).
      *    *** EIBDS : ZUT00000097
         2 ZUT00000097 PICTURE X(8).
      *    *** EIBREQID : ZUT00000098
         2 ZUT00000098 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000099
         2 ZUT00000099 PICTURE X(8).
      *    *** EIBSYNC : ZUT0000009A
         2 ZUT0000009A PICTURE X.
      *    *** EIBFREE : ZUT0000009B
         2 ZUT0000009B PICTURE X.
      *    *** EIBRECV : ZUT0000009C
         2 ZUT0000009C PICTURE X.
      *    *** EIBSEND : ZUT0000009D
         2 ZUT0000009D PICTURE X.
      *    *** EIBATT : ZUT0000009E
         2 ZUT0000009E PICTURE X.
      *    *** EIBEOC : ZUT0000009F
         2 ZUT0000009F PICTURE X.
      *    *** EIBFMH : ZUT000000A0
         2 ZUT000000A0 PICTURE X.
      *    *** EIBCOMPL : ZUT000000A1
         2 ZUT000000A1 PICTURE X(1).
      *    *** EIBSIG : ZUT000000A2
         2 ZUT000000A2 PICTURE X(1).
      *    *** EIBCONF : ZUT000000A3
         2 ZUT000000A3 PICTURE X(1).
      *    *** EIBERR : ZUT000000A4
         2 ZUT000000A4 PICTURE X(1).
      *    *** EIBERRCD : ZUT000000A5
         2 ZUT000000A5 PICTURE X(4).
      *    *** EIBSYNRB : ZUT000000A6
         2 ZUT000000A6 PICTURE X.
      *    *** EIBNODAT : ZUT000000A7
         2 ZUT000000A7 PICTURE X.
      *    *** EIBRESP : ZUT000000A8
         2 ZUT000000A8 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT000000A9
         2 ZUT000000A9 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT000000AA
         2 ZUT000000AA PICTURE X(1).
      *  *** DFHCOMMAREA : ZUT000000AB
       1 ZUT000000AB.
      *    *** CA-REQUEST-ID : ZUT000000AC
         3 ZUT000000AC PIC X(6).
      *    *** CA-RETURN-CODE : ZUT000000AD
         3 ZUT000000AD PIC 9(2).
      *    *** CA-CUSTOMER-NUM : ZUT000000AE
         3 ZUT000000AE PIC 9(10).
      *    *** CA-REQUEST-SPECIFIC : ZUT000000AF
         3 ZUT000000AF PIC X(32482).
      *    *** CA-CUSTOMER-REQUEST : ZUT000000B0
         3 ZUT000000B0 REDEFINES ZUT000000AF.
      *    *** CA-FIRST-NAME : ZUT000000B1
         5 ZUT000000B1 PIC X(10).
      *    *** CA-LAST-NAME : ZUT000000B2
         5 ZUT000000B2 PIC X(20).
      *    *** CA-DOB : ZUT000000B3
         5 ZUT000000B3 PIC X(10).
      *    *** CA-HOUSE-NAME : ZUT000000B4
         5 ZUT000000B4 PIC X(20).
      *    *** CA-HOUSE-NUM : ZUT000000B5
         5 ZUT000000B5 PIC X(4).
      *    *** CA-POSTCODE : ZUT000000B6
         5 ZUT000000B6 PIC X(8).
      *    *** CA-NUM-POLICIES : ZUT000000B7
         5 ZUT000000B7 PIC 9(3).
      *    *** CA-PHONE-MOBILE : ZUT000000B8
         5 ZUT000000B8 PIC X(20).
      *    *** CA-PHONE-HOME : ZUT000000B9
         5 ZUT000000B9 PIC X(20).
      *    *** CA-EMAIL-ADDRESS : ZUT000000BA
         5 ZUT000000BA PIC X(100).
      *    *** CA-POLICY-DATA : ZUT000000BB
         5 ZUT000000BB PIC X(32267).
      *    *** CA-CUSTSECR-REQUEST : ZUT000000BC
         3 ZUT000000BC REDEFINES ZUT000000AF.
      *    *** CA-CUSTSECR-PASS : ZUT000000BD
         5 ZUT000000BD PIC X(32).
      *    *** CA-CUSTSECR-COUNT : ZUT000000BE
         5 ZUT000000BE PIC X(4).
      *    *** CA-CUSTSECR-STATE : ZUT000000BF
         5 ZUT000000BF PIC X.
      *    *** CA-CUSTSECR-DATA : ZUT000000C0
         5 ZUT000000C0 PIC X(32445).
      *    *** CA-POLICY-REQUEST : ZUT000000C1
         3 ZUT000000C1 REDEFINES ZUT000000AF.
      *    *** CA-POLICY-NUM : ZUT000000C2
         5 ZUT000000C2 PIC 9(10).
          5 ZUT000000C2-AZ REDEFINES ZUT000000C2.
          6 PIC X(10) DISPLAY.
      *    *** CA-POLICY-COMMON : ZUT000000C3
         5 ZUT000000C3.
      *    *** CA-ISSUE-DATE : ZUT000000C4
         7 ZUT000000C4 PIC X(10).
      *    *** CA-EXPIRY-DATE : ZUT000000C5
         7 ZUT000000C5 PIC X(10).
      *    *** CA-LASTCHANGED : ZUT000000C6
         7 ZUT000000C6 PIC X(26).
      *    *** CA-BROKERID : ZUT000000C7
         7 ZUT000000C7 PIC 9(10).
          7 ZUT000000C7-AZ REDEFINES ZUT000000C7.
          8 PIC X(10) DISPLAY.
      *    *** CA-BROKERSREF : ZUT000000C8
         7 ZUT000000C8 PIC X(10).
      *    *** CA-PAYMENT : ZUT000000C9
         7 ZUT000000C9 PIC 9(6).
          7 ZUT000000C9-AZ REDEFINES ZUT000000C9.
          8 PIC X(6) DISPLAY.
      *    *** CA-POLICY-SPECIFIC : ZUT000000CA
         5 ZUT000000CA PIC X(32400).
      *    *** CA-ENDOWMENT : ZUT000000CB
         5 ZUT000000CB REDEFINES ZUT000000CA.
      *    *** CA-E-WITH-PROFITS : ZUT000000CC
         7 ZUT000000CC PIC X.
      *    *** CA-E-EQUITIES : ZUT000000CD
         7 ZUT000000CD PIC X.
      *    *** CA-E-MANAGED-FUND : ZUT000000CE
         7 ZUT000000CE PIC X.
      *    *** CA-E-FUND-NAME : ZUT000000CF
         7 ZUT000000CF PIC X(10).
      *    *** CA-E-TERM : ZUT000000D0
         7 ZUT000000D0 PIC 99.
      *    *** CA-E-SUM-ASSURED : ZUT000000D1
         7 ZUT000000D1 PIC 9(6).
      *    *** CA-E-LIFE-ASSURED : ZUT000000D2
         7 ZUT000000D2 PIC X(31).
      *    *** CA-E-PADDING-DATA : ZUT000000D3
         7 ZUT000000D3 PIC X(32348).
      *    *** CA-HOUSE : ZUT000000D4
         5 ZUT000000D4 REDEFINES ZUT000000CA.
      *    *** CA-H-PROPERTY-TYPE : ZUT000000D5
         7 ZUT000000D5 PIC X(15).
      *    *** CA-H-BEDROOMS : ZUT000000D6
         7 ZUT000000D6 PIC 9(3).
      *    *** CA-H-VALUE : ZUT000000D7
         7 ZUT000000D7 PIC 9(8).
      *    *** CA-H-HOUSE-NAME : ZUT000000D8
         7 ZUT000000D8 PIC X(20).
      *    *** CA-H-HOUSE-NUMBER : ZUT000000D9
         7 ZUT000000D9 PIC X(4).
      *    *** CA-H-POSTCODE : ZUT000000DA
         7 ZUT000000DA PIC X(8).
      *    *** CA-H-FILLER : ZUT000000DB
         7 ZUT000000DB PIC X(32342).
      *    *** CA-MOTOR : ZUT000000DC
         5 ZUT000000DC REDEFINES ZUT000000CA.
      *    *** CA-M-MAKE : ZUT000000DD
         7 ZUT000000DD PIC X(15).
      *    *** CA-M-MODEL : ZUT000000DE
         7 ZUT000000DE PIC X(15).
      *    *** CA-M-VALUE : ZUT000000DF
         7 ZUT000000DF PIC 9(6).
      *    *** CA-M-REGNUMBER : ZUT000000E0
         7 ZUT000000E0 PIC X(7).
      *    *** CA-M-COLOUR : ZUT000000E1
         7 ZUT000000E1 PIC X(8).
      *    *** CA-M-CC : ZUT000000E2
         7 ZUT000000E2 PIC 9(4).
      *    *** CA-M-MANUFACTURED : ZUT000000E3
         7 ZUT000000E3 PIC X(10).
      *    *** CA-M-PREMIUM : ZUT000000E4
         7 ZUT000000E4 PIC 9(6).
      *    *** CA-M-ACCIDENTS : ZUT000000E5
         7 ZUT000000E5 PIC 9(6).
      *    *** CA-M-FILLER : ZUT000000E6
         7 ZUT000000E6 PIC X(32323).
      *    *** CA-COMMERCIAL : ZUT000000E7
         5 ZUT000000E7 REDEFINES ZUT000000CA.
      *    *** CA-B-ADDRESS : ZUT000000E8
         7 ZUT000000E8 PIC X(255).
      *    *** CA-B-POSTCODE : ZUT000000E9
         7 ZUT000000E9 PIC X(8).
      *    *** CA-B-LATITUDE : ZUT000000EA
         7 ZUT000000EA PIC X(11).
      *    *** CA-B-LONGITUDE : ZUT000000EB
         7 ZUT000000EB PIC X(11).
      *    *** CA-B-CUSTOMER : ZUT000000EC
         7 ZUT000000EC PIC X(255).
      *    *** CA-B-PROPTYPE : ZUT000000ED
         7 ZUT000000ED PIC X(255).
      *    *** CA-B-FIREPERIL : ZUT000000EE
         7 ZUT000000EE PIC 9(4).
      *    *** CA-B-FIREPREMIUM : ZUT000000EF
         7 ZUT000000EF PIC 9(8).
      *    *** CA-B-CRIMEPERIL : ZUT000000F0
         7 ZUT000000F0 PIC 9(4).
      *    *** CA-B-CRIMEPREMIUM : ZUT000000F1
         7 ZUT000000F1 PIC 9(8).
      *    *** CA-B-FLOODPERIL : ZUT000000F2
         7 ZUT000000F2 PIC 9(4).
      *    *** CA-B-FLOODPREMIUM : ZUT000000F3
         7 ZUT000000F3 PIC 9(8).
      *    *** CA-B-WEATHERPERIL : ZUT000000F4
         7 ZUT000000F4 PIC 9(4).
      *    *** CA-B-WEATHERPREMIUM : ZUT000000F5
         7 ZUT000000F5 PIC 9(8).
      *    *** CA-B-STATUS : ZUT000000F6
         7 ZUT000000F6 PIC 9(4).
      *    *** CA-B-REJECTREASON : ZUT000000F7
         7 ZUT000000F7 PIC X(255).
      *    *** CA-B-FILLER : ZUT000000F8
         7 ZUT000000F8 PIC X(31298).
      *    *** CA-CLAIM : ZUT000000F9
         5 ZUT000000F9 REDEFINES ZUT000000CA.
      *    *** CA-C-NUM : ZUT000000FA
         7 ZUT000000FA PIC 9(10).
          7 ZUT000000FA-AZ REDEFINES ZUT000000FA.
          8 PIC X(10) DISPLAY.
      *    *** CA-C-DATE : ZUT000000FB
         7 ZUT000000FB PIC X(10).
      *    *** CA-C-PAID : ZUT000000FC
         7 ZUT000000FC PIC 9(8).
          7 ZUT000000FC-AZ REDEFINES ZUT000000FC.
          8 PIC X(8) DISPLAY.
      *    *** CA-C-VALUE : ZUT000000FD
         7 ZUT000000FD PIC 9(8).
          7 ZUT000000FD-AZ REDEFINES ZUT000000FD.
          8 PIC X(8) DISPLAY.
      *    *** CA-C-CAUSE : ZUT000000FE
         7 ZUT000000FE PIC X(255).
      *    *** CA-C-OBSERVATIONS : ZUT000000FF
         7 ZUT000000FF PIC X(255).
      *    *** CA-C-FILLER : ZUT00000100
         7 ZUT00000100 PIC X(31854).
       PROCEDURE DIVISION USING AZ-TEST
           ZUT0000008B ZUT000000AB.
      * START
           DISPLAY 'AZU0000I TEST_TEST1 STARTED...'
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * INITIALIZE PARAMETER
           PERFORM INITIALIZE-PARM
      * SET AREA ADDRESS TO POINTER
      * SET INPUT VALUE
           MOVE 0 TO RETURN-CODE.
      * CALL TEST PROGRAM
           DISPLAY 'AZU0000I CALL LGICDB01'
           CALL PROGRAM-NAME
           USING ZUT0000008B ZUT000000AB
           .
      * EVALUATE OUTPUT VALUE
           MOVE 0 TO RETURN-CODE
           IF ZUT000000AC OF ZUT000000AB = AZU00000000 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000AC OF ZUT000000AB TO AZU00000010(1)
             MOVE AZU00000000 TO AZU00000010(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000000F
             MOVE LENGTH OF AZU0000000F TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000010(1)
             MOVE 6 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000010(2)
             MOVE 6 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT000000AD OF ZUT000000AB IS NUMERIC)
               AND (ZUT000000AD OF ZUT000000AB = 0) THEN
             CONTINUE
           ELSE
             MOVE ZUT000000AD OF ZUT000000AB TO AZU00000012(1)
             MOVE 0 TO AZU00000012(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000011
             MOVE LENGTH OF AZU00000011 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000012(1)
             MOVE 2 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000012(2)
             MOVE 2 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT000000AE OF ZUT000000AB IS NUMERIC)
               AND (ZUT000000AE OF ZUT000000AB = 1) THEN
             CONTINUE
           ELSE
             MOVE ZUT000000AE OF ZUT000000AB TO AZU00000014(1)
             MOVE 1 TO AZU00000014(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000013
             MOVE LENGTH OF AZU00000013 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000014(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000014(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C2-AZ OF ZUT000000C1 OF ZUT000000AB =
           AZU00000001 THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE ZUT000000C2-AZ OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000016(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE AZU00000001(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000016(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000015
             MOVE LENGTH OF AZU00000015 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000016(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000016(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C4 OF ZUT000000C3 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000002 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000C4 OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB TO AZU00000018(1)
             MOVE AZU00000002 TO AZU00000018(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000017
             MOVE LENGTH OF AZU00000017 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000018(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000018(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C5 OF ZUT000000C3 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000003 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000C5 OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB TO AZU0000001A(1)
             MOVE AZU00000003 TO AZU0000001A(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000019
             MOVE LENGTH OF AZU00000019 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000001A(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000001A(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C6 OF ZUT000000C3 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000004 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000C6 OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB TO AZU0000001C(1)
             MOVE AZU00000004 TO AZU0000001C(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000001B
             MOVE LENGTH OF AZU0000001B TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000001C(1)
             MOVE 26 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000001C(2)
             MOVE 26 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C7-AZ OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB = AZU00000005 THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE ZUT000000C7-AZ OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU0000001E(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE AZU00000005(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU0000001E(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000001D
             MOVE LENGTH OF AZU0000001D TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000001E(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000001E(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C8 OF ZUT000000C3 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000006 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000C8 OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB TO AZU00000020(1)
             MOVE AZU00000006 TO AZU00000020(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000001F
             MOVE LENGTH OF AZU0000001F TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000020(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000020(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C9-AZ OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB = AZU00000007 THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 6
               MOVE ZUT000000C9-AZ OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000022(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 6
               MOVE AZU00000007(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000022(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000021
             MOVE LENGTH OF AZU00000021 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000022(1)
             MOVE 12 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000022(2)
             MOVE 12 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FA-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB = AZU00000008 THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE ZUT000000FA-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000024(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE AZU00000008(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000024(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000023
             MOVE LENGTH OF AZU00000023 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000024(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000024(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FB OF ZUT000000F9 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000009 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000FB OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB TO AZU00000026(1)
             MOVE AZU00000009 TO AZU00000026(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000025
             MOVE LENGTH OF AZU00000025 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000026(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000026(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FC-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB = AZU0000000A THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 8
               MOVE ZUT000000FC-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000028(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 8
               MOVE AZU0000000A(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000028(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000027
             MOVE LENGTH OF AZU00000027 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000028(1)
             MOVE 16 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000028(2)
             MOVE 16 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FD-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB = AZU0000000B THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 8
               MOVE ZUT000000FD-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU0000002A(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 8
               MOVE AZU0000000B(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU0000002A(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000029
             MOVE LENGTH OF AZU00000029 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000002A(1)
             MOVE 16 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000002A(2)
             MOVE 16 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FE OF ZUT000000F9 OF ZUT000000C1 OF ZUT000000AB
           = AZU0000000C THEN
             CONTINUE
           ELSE
             MOVE ZUT000000FE OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB TO AZU0000002C(1)
             MOVE AZU0000000C TO AZU0000002C(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000002B
             MOVE LENGTH OF AZU0000002B TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000002C(1)
             MOVE 254 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000002C(2)
             MOVE 254 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FF OF ZUT000000F9 OF ZUT000000C1 OF ZUT000000AB
           = AZU0000000D THEN
             CONTINUE
           ELSE
             MOVE ZUT000000FF OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB TO AZU0000002E(1)
             MOVE AZU0000000D TO AZU0000002E(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000002D
             MOVE LENGTH OF AZU0000002D TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000002E(1)
             MOVE 254 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000002E(2)
             MOVE 254 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000100 OF ZUT000000F9 OF ZUT000000C1 OF ZUT000000AB
           = AZU0000000E THEN
             CONTINUE
           ELSE
             MOVE ZUT00000100 OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB TO AZU00000030(1)
             MOVE AZU0000000E TO AZU00000030(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000002F
             MOVE LENGTH OF AZU0000002F TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000030(1)
             MOVE 254 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000030(2)
             MOVE 254 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
      * END
           DISPLAY 'AZU0000I TEST_TEST1 SUCCESSFUL.'
           GOBACK.
       INITIALIZE-PARM.
           EXIT.
       CONVERT.
           MOVE AZ-CONVERT-HEXIN TO AZ-DECBYTE
           DIVIDE AZ-DEC BY 16 GIVING AZ-Q REMAINDER AZ-R
           COMPUTE AZ-Q1 = AZ-Q + 1
           COMPUTE AZ-R1 = AZ-R + 1
           MOVE AZ-HEXSTR(AZ-Q1:1) TO AZ-CONVERT-HEXVAL(1:1)
           MOVE AZ-HEXSTR(AZ-R1:1) TO AZ-CONVERT-HEXVAL(2:1)
           EXIT.
       THROW-ASSERTION.
           MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
           STRING 'COMPARE FAILED IN PROCEDURE DIVISION.'
             DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
             WITH POINTER MESSAGE-LEN OF BZ-ASSERT
           END-STRING
           SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
           SET ADDRESS OF AZ-COMPARE-ITEM-NAME TO
           AZ-COMPARE-ITEM-NAME-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-VALUE TO
           AZ-COMPARE-ITEM-VALUE-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-EXP-VALUE TO
           AZ-COMPARE-ITEM-EXP-VALUE-PTR.
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           DISPLAY 'AZU2001W THE TEST "' AZ-TEST(1:AZ-TEST-NAME-LEN) '"
      -    'FAILED DUE TO AN ASSERTION.'
           DISPLAY 'AZU1101I ' MESSAGE-TXT OF BZ-ASSERT(1:MESSAGE-LEN
           OF BZ-ASSERT)
           DISPLAY 'AZU0000I  DATA ITEM NAME : '
           AZ-COMPARE-ITEM-NAME(1:AZ-COMPARE-ITEM-NAME-LEN)
           DISPLAY 'AZU0000I   VALUE         : '
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
           DISPLAY 'AZU0000I   EXPECTED VALUE: '
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           CALL BZUASSRT USING BZ-P1 BZ-P2 BZ-P3 BZ-ASSERT
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           MOVE 1 TO AZ-ITEM-NAME-S
           PERFORM UNTIL AZ-ITEM-NAME-S > AZ-COMPARE-ITEM-NAME-LEN
             MOVE 206 TO AZ-ITEM-NAME-LEN
             IF AZ-ITEM-NAME-S + 206 > AZ-COMPARE-ITEM-NAME-LEN THEN
               MOVE AZ-COMPARE-ITEM-NAME-LEN TO AZ-ITEM-NAME-LEN
               SUBTRACT AZ-ITEM-NAME-S FROM AZ-ITEM-NAME-LEN
               ADD 1 TO AZ-ITEM-NAME-LEN
             END-IF
             STRING 'ITEM NAME='
             AZ-COMPARE-ITEM-NAME(AZ-ITEM-NAME-S:AZ-ITEM-NAME-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
             SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
             SET AZ-TRACE-PTR TO ADDRESS OF TRACE-TXT OF BZ-TRACE
             CALL BZUTRACE USING BZ-TRACE
             MOVE 1 TO TRACE-LEN OF BZ-TRACE
             ADD AZ-ITEM-NAME-LEN TO AZ-ITEM-NAME-S
           END-PERFORM
           STRING 'VALUE   ='
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'EXPECTED='
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           EXIT.
       END PROGRAM TEST_TEST1.
      *+---------------------------------------------------------------+
      *| TEST_TEST2                                                    |
      *|     THIS PROGRAM IS FOR TEST TEST2                            |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'TEST_TEST2'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'LGICDB01'.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 BZUGETEP          PIC X(8) VALUE 'BZUGETEP'.
       01 AZ-EP-PTR         USAGE IS POINTER.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       01 AZ-RC-WORK             PIC S9(4) USAGE BINARY.
       1 AZ-TEST-EXPECTED-DATA-VALUE.
          3 AZU00000031.
            5 PIC X(6) DISPLAY VALUE '01ICUS'.
          3 AZU00000032.
            5 PIC X(10) VALUE X'C195849985A640404040'.
          3 AZU00000033.
            5 PIC X(5) DISPLAY VALUE 'Pandy'.
            5 PIC X(5) DISPLAY VALUE SPACES.
          3 AZU00000034.
            5 PIC X(10) DISPLAY VALUE SPACES.
          3 AZU00000035.
            5 PIC X(10) DISPLAY VALUE '1950-07-11'.
            5 PIC X(16) DISPLAY VALUE SPACES.
          3 AZU00000036.
            5 PIC X(10) VALUE X'40404040F3F44040D7C9'.
          3 AZU00000037.
            5 PIC X(10) DISPLAY VALUE '101OO 0000'.
          3 AZU00000038.
            5 PIC X(6) VALUE X'F7F7F9F940F1'.
          3 AZU00000039.
            5 PIC X(10) VALUE X'F2F3F4F5F64040404040'.
          3 AZU0000003A.
            5 PIC X(10) DISPLAY VALUE '   01962 8'.
          3 AZU0000003B.
            5 PIC X(8) VALUE X'F1F1F2F3F4404040'.
          3 AZU0000003C.
            5 PIC X(8) VALUE X'4040404040C14BD7'.
          3 AZU0000003D.
            5 PIC X(18) DISPLAY VALUE 'andy@beebhouse.com'.
            5 PIC X(237) DISPLAY VALUE SPACES.
          3 AZU0000003E.
            5 PIC X(255) DISPLAY VALUE SPACES.
          3 AZU0000003F.
            5 PIC X(31854) DISPLAY VALUE SPACES.
       01 AZ-COMPARE.
         03 AZ-COMPARE-ITEM-NAME-PTR  POINTER.
         03 AZ-COMPARE-ITEM-NAME-LEN  PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-EXP-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-EXP-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-ITEM-NAME-S            PIC S9(8) COMP.
         03 AZ-ITEM-NAME-LEN          PIC S9(8) COMP.
       LOCAL-STORAGE SECTION.
       1 AZ-COMPARE-ITEM-NAMES.
         3 AZU00000040.
            5 PIC X(20) DISPLAY VALUE 'CA-REQUEST-ID OF DFH'.
            5 PIC X(8) DISPLAY VALUE 'COMMAREA'.
         3 AZU00000042.
            5 PIC X(20) DISPLAY VALUE 'CA-RETURN-CODE OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU00000044.
            5 PIC X(20) DISPLAY VALUE 'CA-CUSTOMER-NUM OF D'.
            5 PIC X(10) DISPLAY VALUE 'FHCOMMAREA'.
         3 AZU00000046.
            5 PIC X(20) DISPLAY VALUE 'CA-POLICY-NUM OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-REQUEST OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU00000048.
            5 PIC X(20) DISPLAY VALUE 'CA-ISSUE-DATE OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-COMMON OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-REQUEST OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU0000004A.
            5 PIC X(20) DISPLAY VALUE 'CA-EXPIRY-DATE OF CA'.
            5 PIC X(20) DISPLAY VALUE '-POLICY-COMMON OF CA'.
            5 PIC X(20) DISPLAY VALUE '-POLICY-REQUEST OF D'.
            5 PIC X(10) DISPLAY VALUE 'FHCOMMAREA'.
         3 AZU0000004C.
            5 PIC X(20) DISPLAY VALUE 'CA-LASTCHANGED OF CA'.
            5 PIC X(20) DISPLAY VALUE '-POLICY-COMMON OF CA'.
            5 PIC X(20) DISPLAY VALUE '-POLICY-REQUEST OF D'.
            5 PIC X(10) DISPLAY VALUE 'FHCOMMAREA'.
         3 AZU0000004E.
            5 PIC X(20) DISPLAY VALUE 'CA-BROKERID OF CA-PO'.
            5 PIC X(20) DISPLAY VALUE 'LICY-COMMON OF CA-PO'.
            5 PIC X(20) DISPLAY VALUE 'LICY-REQUEST OF DFHC'.
            5 PIC X(7) DISPLAY VALUE 'OMMAREA'.
         3 AZU00000050.
            5 PIC X(20) DISPLAY VALUE 'CA-BROKERSREF OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-COMMON OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-REQUEST OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU00000052.
            5 PIC X(20) DISPLAY VALUE 'CA-PAYMENT OF CA-POL'.
            5 PIC X(20) DISPLAY VALUE 'ICY-COMMON OF CA-POL'.
            5 PIC X(20) DISPLAY VALUE 'ICY-REQUEST OF DFHCO'.
            5 PIC X(6) DISPLAY VALUE 'MMAREA'.
         3 AZU00000054.
            5 PIC X(20) DISPLAY VALUE 'CA-C-NUM OF CA-CLAIM'.
            5 PIC X(20) DISPLAY VALUE ' OF CA-POLICY-REQUES'.
            5 PIC X(16) DISPLAY VALUE 'T OF DFHCOMMAREA'.
         3 AZU00000056.
            5 PIC X(20) DISPLAY VALUE 'CA-C-DATE OF CA-CLAI'.
            5 PIC X(20) DISPLAY VALUE 'M OF CA-POLICY-REQUE'.
            5 PIC X(17) DISPLAY VALUE 'ST OF DFHCOMMAREA'.
         3 AZU00000058.
            5 PIC X(20) DISPLAY VALUE 'CA-C-PAID OF CA-CLAI'.
            5 PIC X(20) DISPLAY VALUE 'M OF CA-POLICY-REQUE'.
            5 PIC X(17) DISPLAY VALUE 'ST OF DFHCOMMAREA'.
         3 AZU0000005A.
            5 PIC X(20) DISPLAY VALUE 'CA-C-VALUE OF CA-CLA'.
            5 PIC X(20) DISPLAY VALUE 'IM OF CA-POLICY-REQU'.
            5 PIC X(18) DISPLAY VALUE 'EST OF DFHCOMMAREA'.
         3 AZU0000005C.
            5 PIC X(20) DISPLAY VALUE 'CA-C-CAUSE OF CA-CLA'.
            5 PIC X(20) DISPLAY VALUE 'IM OF CA-POLICY-REQU'.
            5 PIC X(18) DISPLAY VALUE 'EST OF DFHCOMMAREA'.
         3 AZU0000005E.
            5 PIC X(20) DISPLAY VALUE 'CA-C-OBSERVATIONS OF'.
            5 PIC X(20) DISPLAY VALUE ' CA-CLAIM OF CA-POLI'.
            5 PIC X(20) DISPLAY VALUE 'CY-REQUEST OF DFHCOM'.
            5 PIC X(5) DISPLAY VALUE 'MAREA'.
         3 AZU00000060.
            5 PIC X(20) DISPLAY VALUE 'CA-C-FILLER OF CA-CL'.
            5 PIC X(20) DISPLAY VALUE 'AIM OF CA-POLICY-REQ'.
            5 PIC X(19) DISPLAY VALUE 'UEST OF DFHCOMMAREA'.
       1 AZ-COMPARE-WORK-ITEMS.
          3 AZU00000041 PIC X(6) OCCURS 2.
          3 AZU00000043 PIC 9(2) OCCURS 2.
          3 AZU00000045 PIC 9(10) OCCURS 2.
          3 AZU00000047 PIC X(20) OCCURS 2.
          3 AZU00000049 PIC X(10) OCCURS 2.
          3 AZU0000004B PIC X(10) OCCURS 2.
          3 AZU0000004D PIC X(26) OCCURS 2.
          3 AZU0000004F PIC X(20) OCCURS 2.
          3 AZU00000051 PIC X(10) OCCURS 2.
          3 AZU00000053 PIC X(12) OCCURS 2.
          3 AZU00000055 PIC X(20) OCCURS 2.
          3 AZU00000057 PIC X(10) OCCURS 2.
          3 AZU00000059 PIC X(16) OCCURS 2.
          3 AZU0000005B PIC X(16) OCCURS 2.
          3 AZU0000005D PIC X(255) OCCURS 2.
          3 AZU0000005F PIC X(255) OCCURS 2.
          3 AZU00000061 PIC X(31854) OCCURS 2.
       01 AZ-CONVERT.
         03 AZ-CONVERT-HEXIN  PIC X(1).
         03 AZ-CONVERT-HEXVAL PIC X(2).
         03 AZ-HEXSTR PIC X(16) VALUE "0123456789ABCDEF".
         03 AZ-DEC  PIC S9(4) COMP VALUE 0.
         03 FILLER REDEFINES AZ-DEC.
           05 FILLER PIC X.
           05 AZ-DECBYTE PIC X.
         03 AZ-I PIC S9(8) COMP.
         03 AZ-J PIC S9(8) COMP.
         03 AZ-K PIC S9(8) COMP.
         03 AZ-Q PIC S9(8) COMP.
         03 AZ-R PIC S9(8) COMP.
         03 AZ-Q1 PIC S9(8) COMP.
         03 AZ-R1 PIC S9(8) COMP.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
       01 AZ-PROC-PTR       USAGE IS PROCEDURE-POINTER.
       01 AZ-COMPARE-ITEM-NAME      PIC X(1000).
       01 AZ-COMPARE-ITEM-VALUE     PIC X(254).
       01 AZ-COMPARE-ITEM-EXP-VALUE PIC X(254).
      *  *** DFHEIBLK : ZUT0000008B
       1 ZUT0000008B.
      *    *** EIBTIME : ZUT0000008C
         2 ZUT0000008C PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000008D
         2 ZUT0000008D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000008E
         2 ZUT0000008E PICTURE X(4).
      *    *** EIBTASKN : ZUT0000008F
         2 ZUT0000008F PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT00000090
         2 ZUT00000090 PICTURE X(4).
      *    *** DFHEIGDI : ZUT00000091
         2 ZUT00000091 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000092
         2 ZUT00000092 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000093
         2 ZUT00000093 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000094
         2 ZUT00000094 PICTURE X(1).
      *    *** EIBFN : ZUT00000095
         2 ZUT00000095 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000096
         2 ZUT00000096 PICTURE X(6).
      *    *** EIBDS : ZUT00000097
         2 ZUT00000097 PICTURE X(8).
      *    *** EIBREQID : ZUT00000098
         2 ZUT00000098 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000099
         2 ZUT00000099 PICTURE X(8).
      *    *** EIBSYNC : ZUT0000009A
         2 ZUT0000009A PICTURE X.
      *    *** EIBFREE : ZUT0000009B
         2 ZUT0000009B PICTURE X.
      *    *** EIBRECV : ZUT0000009C
         2 ZUT0000009C PICTURE X.
      *    *** EIBSEND : ZUT0000009D
         2 ZUT0000009D PICTURE X.
      *    *** EIBATT : ZUT0000009E
         2 ZUT0000009E PICTURE X.
      *    *** EIBEOC : ZUT0000009F
         2 ZUT0000009F PICTURE X.
      *    *** EIBFMH : ZUT000000A0
         2 ZUT000000A0 PICTURE X.
      *    *** EIBCOMPL : ZUT000000A1
         2 ZUT000000A1 PICTURE X(1).
      *    *** EIBSIG : ZUT000000A2
         2 ZUT000000A2 PICTURE X(1).
      *    *** EIBCONF : ZUT000000A3
         2 ZUT000000A3 PICTURE X(1).
      *    *** EIBERR : ZUT000000A4
         2 ZUT000000A4 PICTURE X(1).
      *    *** EIBERRCD : ZUT000000A5
         2 ZUT000000A5 PICTURE X(4).
      *    *** EIBSYNRB : ZUT000000A6
         2 ZUT000000A6 PICTURE X.
      *    *** EIBNODAT : ZUT000000A7
         2 ZUT000000A7 PICTURE X.
      *    *** EIBRESP : ZUT000000A8
         2 ZUT000000A8 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT000000A9
         2 ZUT000000A9 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT000000AA
         2 ZUT000000AA PICTURE X(1).
      *  *** DFHCOMMAREA : ZUT000000AB
       1 ZUT000000AB.
      *    *** CA-REQUEST-ID : ZUT000000AC
         3 ZUT000000AC PIC X(6).
      *    *** CA-RETURN-CODE : ZUT000000AD
         3 ZUT000000AD PIC 9(2).
      *    *** CA-CUSTOMER-NUM : ZUT000000AE
         3 ZUT000000AE PIC 9(10).
      *    *** CA-REQUEST-SPECIFIC : ZUT000000AF
         3 ZUT000000AF PIC X(32482).
      *    *** CA-CUSTOMER-REQUEST : ZUT000000B0
         3 ZUT000000B0 REDEFINES ZUT000000AF.
      *    *** CA-FIRST-NAME : ZUT000000B1
         5 ZUT000000B1 PIC X(10).
      *    *** CA-LAST-NAME : ZUT000000B2
         5 ZUT000000B2 PIC X(20).
      *    *** CA-DOB : ZUT000000B3
         5 ZUT000000B3 PIC X(10).
      *    *** CA-HOUSE-NAME : ZUT000000B4
         5 ZUT000000B4 PIC X(20).
      *    *** CA-HOUSE-NUM : ZUT000000B5
         5 ZUT000000B5 PIC X(4).
      *    *** CA-POSTCODE : ZUT000000B6
         5 ZUT000000B6 PIC X(8).
      *    *** CA-NUM-POLICIES : ZUT000000B7
         5 ZUT000000B7 PIC 9(3).
      *    *** CA-PHONE-MOBILE : ZUT000000B8
         5 ZUT000000B8 PIC X(20).
      *    *** CA-PHONE-HOME : ZUT000000B9
         5 ZUT000000B9 PIC X(20).
      *    *** CA-EMAIL-ADDRESS : ZUT000000BA
         5 ZUT000000BA PIC X(100).
      *    *** CA-POLICY-DATA : ZUT000000BB
         5 ZUT000000BB PIC X(32267).
      *    *** CA-CUSTSECR-REQUEST : ZUT000000BC
         3 ZUT000000BC REDEFINES ZUT000000AF.
      *    *** CA-CUSTSECR-PASS : ZUT000000BD
         5 ZUT000000BD PIC X(32).
      *    *** CA-CUSTSECR-COUNT : ZUT000000BE
         5 ZUT000000BE PIC X(4).
      *    *** CA-CUSTSECR-STATE : ZUT000000BF
         5 ZUT000000BF PIC X.
      *    *** CA-CUSTSECR-DATA : ZUT000000C0
         5 ZUT000000C0 PIC X(32445).
      *    *** CA-POLICY-REQUEST : ZUT000000C1
         3 ZUT000000C1 REDEFINES ZUT000000AF.
      *    *** CA-POLICY-NUM : ZUT000000C2
         5 ZUT000000C2 PIC 9(10).
          5 ZUT000000C2-AZ REDEFINES ZUT000000C2.
          6 PIC X(10) DISPLAY.
      *    *** CA-POLICY-COMMON : ZUT000000C3
         5 ZUT000000C3.
      *    *** CA-ISSUE-DATE : ZUT000000C4
         7 ZUT000000C4 PIC X(10).
      *    *** CA-EXPIRY-DATE : ZUT000000C5
         7 ZUT000000C5 PIC X(10).
      *    *** CA-LASTCHANGED : ZUT000000C6
         7 ZUT000000C6 PIC X(26).
      *    *** CA-BROKERID : ZUT000000C7
         7 ZUT000000C7 PIC 9(10).
          7 ZUT000000C7-AZ REDEFINES ZUT000000C7.
          8 PIC X(10) DISPLAY.
      *    *** CA-BROKERSREF : ZUT000000C8
         7 ZUT000000C8 PIC X(10).
      *    *** CA-PAYMENT : ZUT000000C9
         7 ZUT000000C9 PIC 9(6).
          7 ZUT000000C9-AZ REDEFINES ZUT000000C9.
          8 PIC X(6) DISPLAY.
      *    *** CA-POLICY-SPECIFIC : ZUT000000CA
         5 ZUT000000CA PIC X(32400).
      *    *** CA-ENDOWMENT : ZUT000000CB
         5 ZUT000000CB REDEFINES ZUT000000CA.
      *    *** CA-E-WITH-PROFITS : ZUT000000CC
         7 ZUT000000CC PIC X.
      *    *** CA-E-EQUITIES : ZUT000000CD
         7 ZUT000000CD PIC X.
      *    *** CA-E-MANAGED-FUND : ZUT000000CE
         7 ZUT000000CE PIC X.
      *    *** CA-E-FUND-NAME : ZUT000000CF
         7 ZUT000000CF PIC X(10).
      *    *** CA-E-TERM : ZUT000000D0
         7 ZUT000000D0 PIC 99.
      *    *** CA-E-SUM-ASSURED : ZUT000000D1
         7 ZUT000000D1 PIC 9(6).
      *    *** CA-E-LIFE-ASSURED : ZUT000000D2
         7 ZUT000000D2 PIC X(31).
      *    *** CA-E-PADDING-DATA : ZUT000000D3
         7 ZUT000000D3 PIC X(32348).
      *    *** CA-HOUSE : ZUT000000D4
         5 ZUT000000D4 REDEFINES ZUT000000CA.
      *    *** CA-H-PROPERTY-TYPE : ZUT000000D5
         7 ZUT000000D5 PIC X(15).
      *    *** CA-H-BEDROOMS : ZUT000000D6
         7 ZUT000000D6 PIC 9(3).
      *    *** CA-H-VALUE : ZUT000000D7
         7 ZUT000000D7 PIC 9(8).
      *    *** CA-H-HOUSE-NAME : ZUT000000D8
         7 ZUT000000D8 PIC X(20).
      *    *** CA-H-HOUSE-NUMBER : ZUT000000D9
         7 ZUT000000D9 PIC X(4).
      *    *** CA-H-POSTCODE : ZUT000000DA
         7 ZUT000000DA PIC X(8).
      *    *** CA-H-FILLER : ZUT000000DB
         7 ZUT000000DB PIC X(32342).
      *    *** CA-MOTOR : ZUT000000DC
         5 ZUT000000DC REDEFINES ZUT000000CA.
      *    *** CA-M-MAKE : ZUT000000DD
         7 ZUT000000DD PIC X(15).
      *    *** CA-M-MODEL : ZUT000000DE
         7 ZUT000000DE PIC X(15).
      *    *** CA-M-VALUE : ZUT000000DF
         7 ZUT000000DF PIC 9(6).
      *    *** CA-M-REGNUMBER : ZUT000000E0
         7 ZUT000000E0 PIC X(7).
      *    *** CA-M-COLOUR : ZUT000000E1
         7 ZUT000000E1 PIC X(8).
      *    *** CA-M-CC : ZUT000000E2
         7 ZUT000000E2 PIC 9(4).
      *    *** CA-M-MANUFACTURED : ZUT000000E3
         7 ZUT000000E3 PIC X(10).
      *    *** CA-M-PREMIUM : ZUT000000E4
         7 ZUT000000E4 PIC 9(6).
      *    *** CA-M-ACCIDENTS : ZUT000000E5
         7 ZUT000000E5 PIC 9(6).
      *    *** CA-M-FILLER : ZUT000000E6
         7 ZUT000000E6 PIC X(32323).
      *    *** CA-COMMERCIAL : ZUT000000E7
         5 ZUT000000E7 REDEFINES ZUT000000CA.
      *    *** CA-B-ADDRESS : ZUT000000E8
         7 ZUT000000E8 PIC X(255).
      *    *** CA-B-POSTCODE : ZUT000000E9
         7 ZUT000000E9 PIC X(8).
      *    *** CA-B-LATITUDE : ZUT000000EA
         7 ZUT000000EA PIC X(11).
      *    *** CA-B-LONGITUDE : ZUT000000EB
         7 ZUT000000EB PIC X(11).
      *    *** CA-B-CUSTOMER : ZUT000000EC
         7 ZUT000000EC PIC X(255).
      *    *** CA-B-PROPTYPE : ZUT000000ED
         7 ZUT000000ED PIC X(255).
      *    *** CA-B-FIREPERIL : ZUT000000EE
         7 ZUT000000EE PIC 9(4).
      *    *** CA-B-FIREPREMIUM : ZUT000000EF
         7 ZUT000000EF PIC 9(8).
      *    *** CA-B-CRIMEPERIL : ZUT000000F0
         7 ZUT000000F0 PIC 9(4).
      *    *** CA-B-CRIMEPREMIUM : ZUT000000F1
         7 ZUT000000F1 PIC 9(8).
      *    *** CA-B-FLOODPERIL : ZUT000000F2
         7 ZUT000000F2 PIC 9(4).
      *    *** CA-B-FLOODPREMIUM : ZUT000000F3
         7 ZUT000000F3 PIC 9(8).
      *    *** CA-B-WEATHERPERIL : ZUT000000F4
         7 ZUT000000F4 PIC 9(4).
      *    *** CA-B-WEATHERPREMIUM : ZUT000000F5
         7 ZUT000000F5 PIC 9(8).
      *    *** CA-B-STATUS : ZUT000000F6
         7 ZUT000000F6 PIC 9(4).
      *    *** CA-B-REJECTREASON : ZUT000000F7
         7 ZUT000000F7 PIC X(255).
      *    *** CA-B-FILLER : ZUT000000F8
         7 ZUT000000F8 PIC X(31298).
      *    *** CA-CLAIM : ZUT000000F9
         5 ZUT000000F9 REDEFINES ZUT000000CA.
      *    *** CA-C-NUM : ZUT000000FA
         7 ZUT000000FA PIC 9(10).
          7 ZUT000000FA-AZ REDEFINES ZUT000000FA.
          8 PIC X(10) DISPLAY.
      *    *** CA-C-DATE : ZUT000000FB
         7 ZUT000000FB PIC X(10).
      *    *** CA-C-PAID : ZUT000000FC
         7 ZUT000000FC PIC 9(8).
          7 ZUT000000FC-AZ REDEFINES ZUT000000FC.
          8 PIC X(8) DISPLAY.
      *    *** CA-C-VALUE : ZUT000000FD
         7 ZUT000000FD PIC 9(8).
          7 ZUT000000FD-AZ REDEFINES ZUT000000FD.
          8 PIC X(8) DISPLAY.
      *    *** CA-C-CAUSE : ZUT000000FE
         7 ZUT000000FE PIC X(255).
      *    *** CA-C-OBSERVATIONS : ZUT000000FF
         7 ZUT000000FF PIC X(255).
      *    *** CA-C-FILLER : ZUT00000100
         7 ZUT00000100 PIC X(31854).
       PROCEDURE DIVISION USING AZ-TEST
           ZUT0000008B ZUT000000AB.
      * START
           DISPLAY 'AZU0000I TEST_TEST2 STARTED...'
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * INITIALIZE PARAMETER
           PERFORM INITIALIZE-PARM
      * SET AREA ADDRESS TO POINTER
      * SET INPUT VALUE
           MOVE 0 TO RETURN-CODE.
      * CALL TEST PROGRAM
           DISPLAY 'AZU0000I CALL LGICDB01'
           CALL PROGRAM-NAME
           USING ZUT0000008B ZUT000000AB
           .
      * EVALUATE OUTPUT VALUE
           MOVE 0 TO RETURN-CODE
           IF ZUT000000AC OF ZUT000000AB = AZU00000031 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000AC OF ZUT000000AB TO AZU00000041(1)
             MOVE AZU00000031 TO AZU00000041(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000040
             MOVE LENGTH OF AZU00000040 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000041(1)
             MOVE 6 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000041(2)
             MOVE 6 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT000000AD OF ZUT000000AB IS NUMERIC)
               AND (ZUT000000AD OF ZUT000000AB = 0) THEN
             CONTINUE
           ELSE
             MOVE ZUT000000AD OF ZUT000000AB TO AZU00000043(1)
             MOVE 0 TO AZU00000043(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000042
             MOVE LENGTH OF AZU00000042 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000043(1)
             MOVE 2 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000043(2)
             MOVE 2 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT000000AE OF ZUT000000AB IS NUMERIC)
               AND (ZUT000000AE OF ZUT000000AB = 1) THEN
             CONTINUE
           ELSE
             MOVE ZUT000000AE OF ZUT000000AB TO AZU00000045(1)
             MOVE 1 TO AZU00000045(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000044
             MOVE LENGTH OF AZU00000044 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000045(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000045(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C2-AZ OF ZUT000000C1 OF ZUT000000AB =
           AZU00000032 THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE ZUT000000C2-AZ OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000047(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE AZU00000032(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000047(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000046
             MOVE LENGTH OF AZU00000046 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000047(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000047(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C4 OF ZUT000000C3 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000033 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000C4 OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB TO AZU00000049(1)
             MOVE AZU00000033 TO AZU00000049(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000048
             MOVE LENGTH OF AZU00000048 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000049(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000049(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C5 OF ZUT000000C3 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000034 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000C5 OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB TO AZU0000004B(1)
             MOVE AZU00000034 TO AZU0000004B(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000004A
             MOVE LENGTH OF AZU0000004A TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000004B(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000004B(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C6 OF ZUT000000C3 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000035 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000C6 OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB TO AZU0000004D(1)
             MOVE AZU00000035 TO AZU0000004D(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000004C
             MOVE LENGTH OF AZU0000004C TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000004D(1)
             MOVE 26 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000004D(2)
             MOVE 26 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C7-AZ OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB = AZU00000036 THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE ZUT000000C7-AZ OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU0000004F(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE AZU00000036(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU0000004F(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000004E
             MOVE LENGTH OF AZU0000004E TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000004F(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000004F(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C8 OF ZUT000000C3 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000037 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000C8 OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB TO AZU00000051(1)
             MOVE AZU00000037 TO AZU00000051(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000050
             MOVE LENGTH OF AZU00000050 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000051(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000051(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C9-AZ OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB = AZU00000038 THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 6
               MOVE ZUT000000C9-AZ OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000053(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 6
               MOVE AZU00000038(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000053(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000052
             MOVE LENGTH OF AZU00000052 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000053(1)
             MOVE 12 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000053(2)
             MOVE 12 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FA-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB = AZU00000039 THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE ZUT000000FA-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000055(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE AZU00000039(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000055(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000054
             MOVE LENGTH OF AZU00000054 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000055(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000055(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FB OF ZUT000000F9 OF ZUT000000C1 OF ZUT000000AB
           = AZU0000003A THEN
             CONTINUE
           ELSE
             MOVE ZUT000000FB OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB TO AZU00000057(1)
             MOVE AZU0000003A TO AZU00000057(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000056
             MOVE LENGTH OF AZU00000056 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000057(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000057(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FC-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB = AZU0000003B THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 8
               MOVE ZUT000000FC-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000059(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 8
               MOVE AZU0000003B(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000059(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000058
             MOVE LENGTH OF AZU00000058 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000059(1)
             MOVE 16 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000059(2)
             MOVE 16 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FD-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB = AZU0000003C THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 8
               MOVE ZUT000000FD-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU0000005B(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 8
               MOVE AZU0000003C(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU0000005B(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000005A
             MOVE LENGTH OF AZU0000005A TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000005B(1)
             MOVE 16 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000005B(2)
             MOVE 16 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FE OF ZUT000000F9 OF ZUT000000C1 OF ZUT000000AB
           = AZU0000003D THEN
             CONTINUE
           ELSE
             MOVE ZUT000000FE OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB TO AZU0000005D(1)
             MOVE AZU0000003D TO AZU0000005D(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000005C
             MOVE LENGTH OF AZU0000005C TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000005D(1)
             MOVE 254 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000005D(2)
             MOVE 254 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FF OF ZUT000000F9 OF ZUT000000C1 OF ZUT000000AB
           = AZU0000003E THEN
             CONTINUE
           ELSE
             MOVE ZUT000000FF OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB TO AZU0000005F(1)
             MOVE AZU0000003E TO AZU0000005F(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000005E
             MOVE LENGTH OF AZU0000005E TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000005F(1)
             MOVE 254 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000005F(2)
             MOVE 254 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000100 OF ZUT000000F9 OF ZUT000000C1 OF ZUT000000AB
           = AZU0000003F THEN
             CONTINUE
           ELSE
             MOVE ZUT00000100 OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB TO AZU00000061(1)
             MOVE AZU0000003F TO AZU00000061(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000060
             MOVE LENGTH OF AZU00000060 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000061(1)
             MOVE 254 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000061(2)
             MOVE 254 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
      * END
           DISPLAY 'AZU0000I TEST_TEST2 SUCCESSFUL.'
           GOBACK.
       INITIALIZE-PARM.
           EXIT.
       CONVERT.
           MOVE AZ-CONVERT-HEXIN TO AZ-DECBYTE
           DIVIDE AZ-DEC BY 16 GIVING AZ-Q REMAINDER AZ-R
           COMPUTE AZ-Q1 = AZ-Q + 1
           COMPUTE AZ-R1 = AZ-R + 1
           MOVE AZ-HEXSTR(AZ-Q1:1) TO AZ-CONVERT-HEXVAL(1:1)
           MOVE AZ-HEXSTR(AZ-R1:1) TO AZ-CONVERT-HEXVAL(2:1)
           EXIT.
       THROW-ASSERTION.
           MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
           STRING 'COMPARE FAILED IN PROCEDURE DIVISION.'
             DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
             WITH POINTER MESSAGE-LEN OF BZ-ASSERT
           END-STRING
           SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
           SET ADDRESS OF AZ-COMPARE-ITEM-NAME TO
           AZ-COMPARE-ITEM-NAME-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-VALUE TO
           AZ-COMPARE-ITEM-VALUE-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-EXP-VALUE TO
           AZ-COMPARE-ITEM-EXP-VALUE-PTR.
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           DISPLAY 'AZU2001W THE TEST "' AZ-TEST(1:AZ-TEST-NAME-LEN) '"
      -    'FAILED DUE TO AN ASSERTION.'
           DISPLAY 'AZU1101I ' MESSAGE-TXT OF BZ-ASSERT(1:MESSAGE-LEN
           OF BZ-ASSERT)
           DISPLAY 'AZU0000I  DATA ITEM NAME : '
           AZ-COMPARE-ITEM-NAME(1:AZ-COMPARE-ITEM-NAME-LEN)
           DISPLAY 'AZU0000I   VALUE         : '
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
           DISPLAY 'AZU0000I   EXPECTED VALUE: '
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           CALL BZUASSRT USING BZ-P1 BZ-P2 BZ-P3 BZ-ASSERT
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           MOVE 1 TO AZ-ITEM-NAME-S
           PERFORM UNTIL AZ-ITEM-NAME-S > AZ-COMPARE-ITEM-NAME-LEN
             MOVE 206 TO AZ-ITEM-NAME-LEN
             IF AZ-ITEM-NAME-S + 206 > AZ-COMPARE-ITEM-NAME-LEN THEN
               MOVE AZ-COMPARE-ITEM-NAME-LEN TO AZ-ITEM-NAME-LEN
               SUBTRACT AZ-ITEM-NAME-S FROM AZ-ITEM-NAME-LEN
               ADD 1 TO AZ-ITEM-NAME-LEN
             END-IF
             STRING 'ITEM NAME='
             AZ-COMPARE-ITEM-NAME(AZ-ITEM-NAME-S:AZ-ITEM-NAME-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
             SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
             SET AZ-TRACE-PTR TO ADDRESS OF TRACE-TXT OF BZ-TRACE
             CALL BZUTRACE USING BZ-TRACE
             MOVE 1 TO TRACE-LEN OF BZ-TRACE
             ADD AZ-ITEM-NAME-LEN TO AZ-ITEM-NAME-S
           END-PERFORM
           STRING 'VALUE   ='
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'EXPECTED='
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           EXIT.
       END PROGRAM TEST_TEST2.
      *+---------------------------------------------------------------+
      *| TEST_TEST3                                                    |
      *|     THIS PROGRAM IS FOR TEST TEST3                            |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'TEST_TEST3'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'LGICDB01'.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 BZUGETEP          PIC X(8) VALUE 'BZUGETEP'.
       01 AZ-EP-PTR         USAGE IS POINTER.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       01 AZ-RC-WORK             PIC S9(4) USAGE BINARY.
       1 AZ-TEST-EXPECTED-DATA-VALUE.
          3 AZU00000062.
            5 PIC X(6) DISPLAY VALUE '01ICUS'.
          3 AZU00000063.
            5 PIC X(10) VALUE X'C195849985A640404040'.
          3 AZU00000064.
            5 PIC X(5) DISPLAY VALUE 'Pandy'.
            5 PIC X(5) DISPLAY VALUE SPACES.
          3 AZU00000065.
            5 PIC X(10) DISPLAY VALUE SPACES.
          3 AZU00000066.
            5 PIC X(10) DISPLAY VALUE '1950-07-11'.
            5 PIC X(16) DISPLAY VALUE SPACES.
          3 AZU00000067.
            5 PIC X(10) VALUE X'40404040F3F44040D7C9'.
          3 AZU00000068.
            5 PIC X(10) DISPLAY VALUE '101OO 0000'.
          3 AZU00000069.
            5 PIC X(6) VALUE X'F7F7F9F940F1'.
          3 AZU0000006A.
            5 PIC X(10) VALUE X'F2F3F4F5F64040404040'.
          3 AZU0000006B.
            5 PIC X(10) DISPLAY VALUE '   01962 8'.
          3 AZU0000006C.
            5 PIC X(8) VALUE X'F1F1F2F3F4404040'.
          3 AZU0000006D.
            5 PIC X(8) VALUE X'4040404040C14BD7'.
          3 AZU0000006E.
            5 PIC X(18) DISPLAY VALUE 'andy@beebhouse.com'.
            5 PIC X(237) DISPLAY VALUE SPACES.
          3 AZU0000006F.
            5 PIC X(255) DISPLAY VALUE SPACES.
          3 AZU00000070.
            5 PIC X(31854) DISPLAY VALUE SPACES.
       01 AZ-COMPARE.
         03 AZ-COMPARE-ITEM-NAME-PTR  POINTER.
         03 AZ-COMPARE-ITEM-NAME-LEN  PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-EXP-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-EXP-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-ITEM-NAME-S            PIC S9(8) COMP.
         03 AZ-ITEM-NAME-LEN          PIC S9(8) COMP.
       LOCAL-STORAGE SECTION.
       1 AZ-COMPARE-ITEM-NAMES.
         3 AZU00000071.
            5 PIC X(20) DISPLAY VALUE 'CA-REQUEST-ID OF DFH'.
            5 PIC X(8) DISPLAY VALUE 'COMMAREA'.
         3 AZU00000073.
            5 PIC X(20) DISPLAY VALUE 'CA-RETURN-CODE OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU00000075.
            5 PIC X(20) DISPLAY VALUE 'CA-CUSTOMER-NUM OF D'.
            5 PIC X(10) DISPLAY VALUE 'FHCOMMAREA'.
         3 AZU00000077.
            5 PIC X(20) DISPLAY VALUE 'CA-POLICY-NUM OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-REQUEST OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU00000079.
            5 PIC X(20) DISPLAY VALUE 'CA-ISSUE-DATE OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-COMMON OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-REQUEST OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU0000007B.
            5 PIC X(20) DISPLAY VALUE 'CA-EXPIRY-DATE OF CA'.
            5 PIC X(20) DISPLAY VALUE '-POLICY-COMMON OF CA'.
            5 PIC X(20) DISPLAY VALUE '-POLICY-REQUEST OF D'.
            5 PIC X(10) DISPLAY VALUE 'FHCOMMAREA'.
         3 AZU0000007D.
            5 PIC X(20) DISPLAY VALUE 'CA-LASTCHANGED OF CA'.
            5 PIC X(20) DISPLAY VALUE '-POLICY-COMMON OF CA'.
            5 PIC X(20) DISPLAY VALUE '-POLICY-REQUEST OF D'.
            5 PIC X(10) DISPLAY VALUE 'FHCOMMAREA'.
         3 AZU0000007F.
            5 PIC X(20) DISPLAY VALUE 'CA-BROKERID OF CA-PO'.
            5 PIC X(20) DISPLAY VALUE 'LICY-COMMON OF CA-PO'.
            5 PIC X(20) DISPLAY VALUE 'LICY-REQUEST OF DFHC'.
            5 PIC X(7) DISPLAY VALUE 'OMMAREA'.
         3 AZU00000081.
            5 PIC X(20) DISPLAY VALUE 'CA-BROKERSREF OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-COMMON OF CA-'.
            5 PIC X(20) DISPLAY VALUE 'POLICY-REQUEST OF DF'.
            5 PIC X(9) DISPLAY VALUE 'HCOMMAREA'.
         3 AZU00000083.
            5 PIC X(20) DISPLAY VALUE 'CA-PAYMENT OF CA-POL'.
            5 PIC X(20) DISPLAY VALUE 'ICY-COMMON OF CA-POL'.
            5 PIC X(20) DISPLAY VALUE 'ICY-REQUEST OF DFHCO'.
            5 PIC X(6) DISPLAY VALUE 'MMAREA'.
         3 AZU00000085.
            5 PIC X(20) DISPLAY VALUE 'CA-C-NUM OF CA-CLAIM'.
            5 PIC X(20) DISPLAY VALUE ' OF CA-POLICY-REQUES'.
            5 PIC X(16) DISPLAY VALUE 'T OF DFHCOMMAREA'.
         3 AZU00000087.
            5 PIC X(20) DISPLAY VALUE 'CA-C-DATE OF CA-CLAI'.
            5 PIC X(20) DISPLAY VALUE 'M OF CA-POLICY-REQUE'.
            5 PIC X(17) DISPLAY VALUE 'ST OF DFHCOMMAREA'.
         3 AZU00000089.
            5 PIC X(20) DISPLAY VALUE 'CA-C-PAID OF CA-CLAI'.
            5 PIC X(20) DISPLAY VALUE 'M OF CA-POLICY-REQUE'.
            5 PIC X(17) DISPLAY VALUE 'ST OF DFHCOMMAREA'.
         3 AZU0000008B.
            5 PIC X(20) DISPLAY VALUE 'CA-C-VALUE OF CA-CLA'.
            5 PIC X(20) DISPLAY VALUE 'IM OF CA-POLICY-REQU'.
            5 PIC X(18) DISPLAY VALUE 'EST OF DFHCOMMAREA'.
         3 AZU0000008D.
            5 PIC X(20) DISPLAY VALUE 'CA-C-CAUSE OF CA-CLA'.
            5 PIC X(20) DISPLAY VALUE 'IM OF CA-POLICY-REQU'.
            5 PIC X(18) DISPLAY VALUE 'EST OF DFHCOMMAREA'.
         3 AZU0000008F.
            5 PIC X(20) DISPLAY VALUE 'CA-C-OBSERVATIONS OF'.
            5 PIC X(20) DISPLAY VALUE ' CA-CLAIM OF CA-POLI'.
            5 PIC X(20) DISPLAY VALUE 'CY-REQUEST OF DFHCOM'.
            5 PIC X(5) DISPLAY VALUE 'MAREA'.
         3 AZU00000091.
            5 PIC X(20) DISPLAY VALUE 'CA-C-FILLER OF CA-CL'.
            5 PIC X(20) DISPLAY VALUE 'AIM OF CA-POLICY-REQ'.
            5 PIC X(19) DISPLAY VALUE 'UEST OF DFHCOMMAREA'.
       1 AZ-COMPARE-WORK-ITEMS.
          3 AZU00000072 PIC X(6) OCCURS 2.
          3 AZU00000074 PIC 9(2) OCCURS 2.
          3 AZU00000076 PIC 9(10) OCCURS 2.
          3 AZU00000078 PIC X(20) OCCURS 2.
          3 AZU0000007A PIC X(10) OCCURS 2.
          3 AZU0000007C PIC X(10) OCCURS 2.
          3 AZU0000007E PIC X(26) OCCURS 2.
          3 AZU00000080 PIC X(20) OCCURS 2.
          3 AZU00000082 PIC X(10) OCCURS 2.
          3 AZU00000084 PIC X(12) OCCURS 2.
          3 AZU00000086 PIC X(20) OCCURS 2.
          3 AZU00000088 PIC X(10) OCCURS 2.
          3 AZU0000008A PIC X(16) OCCURS 2.
          3 AZU0000008C PIC X(16) OCCURS 2.
          3 AZU0000008E PIC X(255) OCCURS 2.
          3 AZU00000090 PIC X(255) OCCURS 2.
          3 AZU00000092 PIC X(31854) OCCURS 2.
       01 AZ-CONVERT.
         03 AZ-CONVERT-HEXIN  PIC X(1).
         03 AZ-CONVERT-HEXVAL PIC X(2).
         03 AZ-HEXSTR PIC X(16) VALUE "0123456789ABCDEF".
         03 AZ-DEC  PIC S9(4) COMP VALUE 0.
         03 FILLER REDEFINES AZ-DEC.
           05 FILLER PIC X.
           05 AZ-DECBYTE PIC X.
         03 AZ-I PIC S9(8) COMP.
         03 AZ-J PIC S9(8) COMP.
         03 AZ-K PIC S9(8) COMP.
         03 AZ-Q PIC S9(8) COMP.
         03 AZ-R PIC S9(8) COMP.
         03 AZ-Q1 PIC S9(8) COMP.
         03 AZ-R1 PIC S9(8) COMP.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
       01 AZ-PROC-PTR       USAGE IS PROCEDURE-POINTER.
       01 AZ-COMPARE-ITEM-NAME      PIC X(1000).
       01 AZ-COMPARE-ITEM-VALUE     PIC X(254).
       01 AZ-COMPARE-ITEM-EXP-VALUE PIC X(254).
      *  *** DFHEIBLK : ZUT0000008B
       1 ZUT0000008B.
      *    *** EIBTIME : ZUT0000008C
         2 ZUT0000008C PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000008D
         2 ZUT0000008D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000008E
         2 ZUT0000008E PICTURE X(4).
      *    *** EIBTASKN : ZUT0000008F
         2 ZUT0000008F PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT00000090
         2 ZUT00000090 PICTURE X(4).
      *    *** DFHEIGDI : ZUT00000091
         2 ZUT00000091 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000092
         2 ZUT00000092 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000093
         2 ZUT00000093 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000094
         2 ZUT00000094 PICTURE X(1).
      *    *** EIBFN : ZUT00000095
         2 ZUT00000095 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000096
         2 ZUT00000096 PICTURE X(6).
      *    *** EIBDS : ZUT00000097
         2 ZUT00000097 PICTURE X(8).
      *    *** EIBREQID : ZUT00000098
         2 ZUT00000098 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000099
         2 ZUT00000099 PICTURE X(8).
      *    *** EIBSYNC : ZUT0000009A
         2 ZUT0000009A PICTURE X.
      *    *** EIBFREE : ZUT0000009B
         2 ZUT0000009B PICTURE X.
      *    *** EIBRECV : ZUT0000009C
         2 ZUT0000009C PICTURE X.
      *    *** EIBSEND : ZUT0000009D
         2 ZUT0000009D PICTURE X.
      *    *** EIBATT : ZUT0000009E
         2 ZUT0000009E PICTURE X.
      *    *** EIBEOC : ZUT0000009F
         2 ZUT0000009F PICTURE X.
      *    *** EIBFMH : ZUT000000A0
         2 ZUT000000A0 PICTURE X.
      *    *** EIBCOMPL : ZUT000000A1
         2 ZUT000000A1 PICTURE X(1).
      *    *** EIBSIG : ZUT000000A2
         2 ZUT000000A2 PICTURE X(1).
      *    *** EIBCONF : ZUT000000A3
         2 ZUT000000A3 PICTURE X(1).
      *    *** EIBERR : ZUT000000A4
         2 ZUT000000A4 PICTURE X(1).
      *    *** EIBERRCD : ZUT000000A5
         2 ZUT000000A5 PICTURE X(4).
      *    *** EIBSYNRB : ZUT000000A6
         2 ZUT000000A6 PICTURE X.
      *    *** EIBNODAT : ZUT000000A7
         2 ZUT000000A7 PICTURE X.
      *    *** EIBRESP : ZUT000000A8
         2 ZUT000000A8 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT000000A9
         2 ZUT000000A9 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT000000AA
         2 ZUT000000AA PICTURE X(1).
      *  *** DFHCOMMAREA : ZUT000000AB
       1 ZUT000000AB.
      *    *** CA-REQUEST-ID : ZUT000000AC
         3 ZUT000000AC PIC X(6).
      *    *** CA-RETURN-CODE : ZUT000000AD
         3 ZUT000000AD PIC 9(2).
      *    *** CA-CUSTOMER-NUM : ZUT000000AE
         3 ZUT000000AE PIC 9(10).
      *    *** CA-REQUEST-SPECIFIC : ZUT000000AF
         3 ZUT000000AF PIC X(32482).
      *    *** CA-CUSTOMER-REQUEST : ZUT000000B0
         3 ZUT000000B0 REDEFINES ZUT000000AF.
      *    *** CA-FIRST-NAME : ZUT000000B1
         5 ZUT000000B1 PIC X(10).
      *    *** CA-LAST-NAME : ZUT000000B2
         5 ZUT000000B2 PIC X(20).
      *    *** CA-DOB : ZUT000000B3
         5 ZUT000000B3 PIC X(10).
      *    *** CA-HOUSE-NAME : ZUT000000B4
         5 ZUT000000B4 PIC X(20).
      *    *** CA-HOUSE-NUM : ZUT000000B5
         5 ZUT000000B5 PIC X(4).
      *    *** CA-POSTCODE : ZUT000000B6
         5 ZUT000000B6 PIC X(8).
      *    *** CA-NUM-POLICIES : ZUT000000B7
         5 ZUT000000B7 PIC 9(3).
      *    *** CA-PHONE-MOBILE : ZUT000000B8
         5 ZUT000000B8 PIC X(20).
      *    *** CA-PHONE-HOME : ZUT000000B9
         5 ZUT000000B9 PIC X(20).
      *    *** CA-EMAIL-ADDRESS : ZUT000000BA
         5 ZUT000000BA PIC X(100).
      *    *** CA-POLICY-DATA : ZUT000000BB
         5 ZUT000000BB PIC X(32267).
      *    *** CA-CUSTSECR-REQUEST : ZUT000000BC
         3 ZUT000000BC REDEFINES ZUT000000AF.
      *    *** CA-CUSTSECR-PASS : ZUT000000BD
         5 ZUT000000BD PIC X(32).
      *    *** CA-CUSTSECR-COUNT : ZUT000000BE
         5 ZUT000000BE PIC X(4).
      *    *** CA-CUSTSECR-STATE : ZUT000000BF
         5 ZUT000000BF PIC X.
      *    *** CA-CUSTSECR-DATA : ZUT000000C0
         5 ZUT000000C0 PIC X(32445).
      *    *** CA-POLICY-REQUEST : ZUT000000C1
         3 ZUT000000C1 REDEFINES ZUT000000AF.
      *    *** CA-POLICY-NUM : ZUT000000C2
         5 ZUT000000C2 PIC 9(10).
          5 ZUT000000C2-AZ REDEFINES ZUT000000C2.
          6 PIC X(10) DISPLAY.
      *    *** CA-POLICY-COMMON : ZUT000000C3
         5 ZUT000000C3.
      *    *** CA-ISSUE-DATE : ZUT000000C4
         7 ZUT000000C4 PIC X(10).
      *    *** CA-EXPIRY-DATE : ZUT000000C5
         7 ZUT000000C5 PIC X(10).
      *    *** CA-LASTCHANGED : ZUT000000C6
         7 ZUT000000C6 PIC X(26).
      *    *** CA-BROKERID : ZUT000000C7
         7 ZUT000000C7 PIC 9(10).
          7 ZUT000000C7-AZ REDEFINES ZUT000000C7.
          8 PIC X(10) DISPLAY.
      *    *** CA-BROKERSREF : ZUT000000C8
         7 ZUT000000C8 PIC X(10).
      *    *** CA-PAYMENT : ZUT000000C9
         7 ZUT000000C9 PIC 9(6).
          7 ZUT000000C9-AZ REDEFINES ZUT000000C9.
          8 PIC X(6) DISPLAY.
      *    *** CA-POLICY-SPECIFIC : ZUT000000CA
         5 ZUT000000CA PIC X(32400).
      *    *** CA-ENDOWMENT : ZUT000000CB
         5 ZUT000000CB REDEFINES ZUT000000CA.
      *    *** CA-E-WITH-PROFITS : ZUT000000CC
         7 ZUT000000CC PIC X.
      *    *** CA-E-EQUITIES : ZUT000000CD
         7 ZUT000000CD PIC X.
      *    *** CA-E-MANAGED-FUND : ZUT000000CE
         7 ZUT000000CE PIC X.
      *    *** CA-E-FUND-NAME : ZUT000000CF
         7 ZUT000000CF PIC X(10).
      *    *** CA-E-TERM : ZUT000000D0
         7 ZUT000000D0 PIC 99.
      *    *** CA-E-SUM-ASSURED : ZUT000000D1
         7 ZUT000000D1 PIC 9(6).
      *    *** CA-E-LIFE-ASSURED : ZUT000000D2
         7 ZUT000000D2 PIC X(31).
      *    *** CA-E-PADDING-DATA : ZUT000000D3
         7 ZUT000000D3 PIC X(32348).
      *    *** CA-HOUSE : ZUT000000D4
         5 ZUT000000D4 REDEFINES ZUT000000CA.
      *    *** CA-H-PROPERTY-TYPE : ZUT000000D5
         7 ZUT000000D5 PIC X(15).
      *    *** CA-H-BEDROOMS : ZUT000000D6
         7 ZUT000000D6 PIC 9(3).
      *    *** CA-H-VALUE : ZUT000000D7
         7 ZUT000000D7 PIC 9(8).
      *    *** CA-H-HOUSE-NAME : ZUT000000D8
         7 ZUT000000D8 PIC X(20).
      *    *** CA-H-HOUSE-NUMBER : ZUT000000D9
         7 ZUT000000D9 PIC X(4).
      *    *** CA-H-POSTCODE : ZUT000000DA
         7 ZUT000000DA PIC X(8).
      *    *** CA-H-FILLER : ZUT000000DB
         7 ZUT000000DB PIC X(32342).
      *    *** CA-MOTOR : ZUT000000DC
         5 ZUT000000DC REDEFINES ZUT000000CA.
      *    *** CA-M-MAKE : ZUT000000DD
         7 ZUT000000DD PIC X(15).
      *    *** CA-M-MODEL : ZUT000000DE
         7 ZUT000000DE PIC X(15).
      *    *** CA-M-VALUE : ZUT000000DF
         7 ZUT000000DF PIC 9(6).
      *    *** CA-M-REGNUMBER : ZUT000000E0
         7 ZUT000000E0 PIC X(7).
      *    *** CA-M-COLOUR : ZUT000000E1
         7 ZUT000000E1 PIC X(8).
      *    *** CA-M-CC : ZUT000000E2
         7 ZUT000000E2 PIC 9(4).
      *    *** CA-M-MANUFACTURED : ZUT000000E3
         7 ZUT000000E3 PIC X(10).
      *    *** CA-M-PREMIUM : ZUT000000E4
         7 ZUT000000E4 PIC 9(6).
      *    *** CA-M-ACCIDENTS : ZUT000000E5
         7 ZUT000000E5 PIC 9(6).
      *    *** CA-M-FILLER : ZUT000000E6
         7 ZUT000000E6 PIC X(32323).
      *    *** CA-COMMERCIAL : ZUT000000E7
         5 ZUT000000E7 REDEFINES ZUT000000CA.
      *    *** CA-B-ADDRESS : ZUT000000E8
         7 ZUT000000E8 PIC X(255).
      *    *** CA-B-POSTCODE : ZUT000000E9
         7 ZUT000000E9 PIC X(8).
      *    *** CA-B-LATITUDE : ZUT000000EA
         7 ZUT000000EA PIC X(11).
      *    *** CA-B-LONGITUDE : ZUT000000EB
         7 ZUT000000EB PIC X(11).
      *    *** CA-B-CUSTOMER : ZUT000000EC
         7 ZUT000000EC PIC X(255).
      *    *** CA-B-PROPTYPE : ZUT000000ED
         7 ZUT000000ED PIC X(255).
      *    *** CA-B-FIREPERIL : ZUT000000EE
         7 ZUT000000EE PIC 9(4).
      *    *** CA-B-FIREPREMIUM : ZUT000000EF
         7 ZUT000000EF PIC 9(8).
      *    *** CA-B-CRIMEPERIL : ZUT000000F0
         7 ZUT000000F0 PIC 9(4).
      *    *** CA-B-CRIMEPREMIUM : ZUT000000F1
         7 ZUT000000F1 PIC 9(8).
      *    *** CA-B-FLOODPERIL : ZUT000000F2
         7 ZUT000000F2 PIC 9(4).
      *    *** CA-B-FLOODPREMIUM : ZUT000000F3
         7 ZUT000000F3 PIC 9(8).
      *    *** CA-B-WEATHERPERIL : ZUT000000F4
         7 ZUT000000F4 PIC 9(4).
      *    *** CA-B-WEATHERPREMIUM : ZUT000000F5
         7 ZUT000000F5 PIC 9(8).
      *    *** CA-B-STATUS : ZUT000000F6
         7 ZUT000000F6 PIC 9(4).
      *    *** CA-B-REJECTREASON : ZUT000000F7
         7 ZUT000000F7 PIC X(255).
      *    *** CA-B-FILLER : ZUT000000F8
         7 ZUT000000F8 PIC X(31298).
      *    *** CA-CLAIM : ZUT000000F9
         5 ZUT000000F9 REDEFINES ZUT000000CA.
      *    *** CA-C-NUM : ZUT000000FA
         7 ZUT000000FA PIC 9(10).
          7 ZUT000000FA-AZ REDEFINES ZUT000000FA.
          8 PIC X(10) DISPLAY.
      *    *** CA-C-DATE : ZUT000000FB
         7 ZUT000000FB PIC X(10).
      *    *** CA-C-PAID : ZUT000000FC
         7 ZUT000000FC PIC 9(8).
          7 ZUT000000FC-AZ REDEFINES ZUT000000FC.
          8 PIC X(8) DISPLAY.
      *    *** CA-C-VALUE : ZUT000000FD
         7 ZUT000000FD PIC 9(8).
          7 ZUT000000FD-AZ REDEFINES ZUT000000FD.
          8 PIC X(8) DISPLAY.
      *    *** CA-C-CAUSE : ZUT000000FE
         7 ZUT000000FE PIC X(255).
      *    *** CA-C-OBSERVATIONS : ZUT000000FF
         7 ZUT000000FF PIC X(255).
      *    *** CA-C-FILLER : ZUT00000100
         7 ZUT00000100 PIC X(31854).
       PROCEDURE DIVISION USING AZ-TEST
           ZUT0000008B ZUT000000AB.
      * START
           DISPLAY 'AZU0000I TEST_TEST3 STARTED...'
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * INITIALIZE PARAMETER
           PERFORM INITIALIZE-PARM
      * SET AREA ADDRESS TO POINTER
      * SET INPUT VALUE
           MOVE 0 TO RETURN-CODE.
      * CALL TEST PROGRAM
           DISPLAY 'AZU0000I CALL LGICDB01'
           CALL PROGRAM-NAME
           USING ZUT0000008B ZUT000000AB
           .
      * EVALUATE OUTPUT VALUE
           MOVE 0 TO RETURN-CODE
           IF ZUT000000AC OF ZUT000000AB = AZU00000062 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000AC OF ZUT000000AB TO AZU00000072(1)
             MOVE AZU00000062 TO AZU00000072(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000071
             MOVE LENGTH OF AZU00000071 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000072(1)
             MOVE 6 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000072(2)
             MOVE 6 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT000000AD OF ZUT000000AB IS NUMERIC)
               AND (ZUT000000AD OF ZUT000000AB = 0) THEN
             CONTINUE
           ELSE
             MOVE ZUT000000AD OF ZUT000000AB TO AZU00000074(1)
             MOVE 0 TO AZU00000074(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000073
             MOVE LENGTH OF AZU00000073 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000074(1)
             MOVE 2 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000074(2)
             MOVE 2 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT000000AE OF ZUT000000AB IS NUMERIC)
               AND (ZUT000000AE OF ZUT000000AB = 1) THEN
             CONTINUE
           ELSE
             MOVE ZUT000000AE OF ZUT000000AB TO AZU00000076(1)
             MOVE 1 TO AZU00000076(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000075
             MOVE LENGTH OF AZU00000075 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000076(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000076(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C2-AZ OF ZUT000000C1 OF ZUT000000AB =
           AZU00000063 THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE ZUT000000C2-AZ OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000078(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE AZU00000063(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000078(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000077
             MOVE LENGTH OF AZU00000077 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000078(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000078(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C4 OF ZUT000000C3 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000064 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000C4 OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB TO AZU0000007A(1)
             MOVE AZU00000064 TO AZU0000007A(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000079
             MOVE LENGTH OF AZU00000079 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000007A(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000007A(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C5 OF ZUT000000C3 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000065 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000C5 OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB TO AZU0000007C(1)
             MOVE AZU00000065 TO AZU0000007C(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000007B
             MOVE LENGTH OF AZU0000007B TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000007C(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000007C(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C6 OF ZUT000000C3 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000066 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000C6 OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB TO AZU0000007E(1)
             MOVE AZU00000066 TO AZU0000007E(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000007D
             MOVE LENGTH OF AZU0000007D TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000007E(1)
             MOVE 26 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000007E(2)
             MOVE 26 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C7-AZ OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB = AZU00000067 THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE ZUT000000C7-AZ OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000080(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE AZU00000067(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000080(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000007F
             MOVE LENGTH OF AZU0000007F TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000080(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000080(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C8 OF ZUT000000C3 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000068 THEN
             CONTINUE
           ELSE
             MOVE ZUT000000C8 OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB TO AZU00000082(1)
             MOVE AZU00000068 TO AZU00000082(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000081
             MOVE LENGTH OF AZU00000081 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000082(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000082(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000C9-AZ OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB = AZU00000069 THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 6
               MOVE ZUT000000C9-AZ OF ZUT000000C3 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000084(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 6
               MOVE AZU00000069(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000084(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000083
             MOVE LENGTH OF AZU00000083 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000084(1)
             MOVE 12 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000084(2)
             MOVE 12 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FA-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB = AZU0000006A THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE ZUT000000FA-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000086(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 10
               MOVE AZU0000006A(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU00000086(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000085
             MOVE LENGTH OF AZU00000085 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000086(1)
             MOVE 20 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000086(2)
             MOVE 20 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FB OF ZUT000000F9 OF ZUT000000C1 OF ZUT000000AB
           = AZU0000006B THEN
             CONTINUE
           ELSE
             MOVE ZUT000000FB OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB TO AZU00000088(1)
             MOVE AZU0000006B TO AZU00000088(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000087
             MOVE LENGTH OF AZU00000087 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000088(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000088(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FC-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB = AZU0000006C THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 8
               MOVE ZUT000000FC-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU0000008A(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 8
               MOVE AZU0000006C(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU0000008A(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000089
             MOVE LENGTH OF AZU00000089 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000008A(1)
             MOVE 16 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000008A(2)
             MOVE 16 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FD-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB = AZU0000006D THEN
             CONTINUE
           ELSE
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 8
               MOVE ZUT000000FD-AZ OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU0000008C(1)(AZ-J:2)
             END-PERFORM
             PERFORM VARYING AZ-I FROM 1 BY 1 UNTIL AZ-I > 8
               MOVE AZU0000006D(AZ-I:1) TO AZ-CONVERT-HEXIN
               PERFORM CONVERT
               COMPUTE AZ-J = AZ-I * 2 - 1
               MOVE AZ-CONVERT-HEXVAL TO AZU0000008C(2)(AZ-J:2)
             END-PERFORM
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000008B
             MOVE LENGTH OF AZU0000008B TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000008C(1)
             MOVE 16 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000008C(2)
             MOVE 16 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FE OF ZUT000000F9 OF ZUT000000C1 OF ZUT000000AB
           = AZU0000006E THEN
             CONTINUE
           ELSE
             MOVE ZUT000000FE OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB TO AZU0000008E(1)
             MOVE AZU0000006E TO AZU0000008E(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000008D
             MOVE LENGTH OF AZU0000008D TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000008E(1)
             MOVE 254 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000008E(2)
             MOVE 254 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT000000FF OF ZUT000000F9 OF ZUT000000C1 OF ZUT000000AB
           = AZU0000006F THEN
             CONTINUE
           ELSE
             MOVE ZUT000000FF OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB TO AZU00000090(1)
             MOVE AZU0000006F TO AZU00000090(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000008F
             MOVE LENGTH OF AZU0000008F TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000090(1)
             MOVE 254 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000090(2)
             MOVE 254 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000100 OF ZUT000000F9 OF ZUT000000C1 OF ZUT000000AB
           = AZU00000070 THEN
             CONTINUE
           ELSE
             MOVE ZUT00000100 OF ZUT000000F9 OF ZUT000000C1 OF
           ZUT000000AB TO AZU00000092(1)
             MOVE AZU00000070 TO AZU00000092(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000091
             MOVE LENGTH OF AZU00000091 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000092(1)
             MOVE 254 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000092(2)
             MOVE 254 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
      * END
           DISPLAY 'AZU0000I TEST_TEST3 SUCCESSFUL.'
           GOBACK.
       INITIALIZE-PARM.
           EXIT.
       CONVERT.
           MOVE AZ-CONVERT-HEXIN TO AZ-DECBYTE
           DIVIDE AZ-DEC BY 16 GIVING AZ-Q REMAINDER AZ-R
           COMPUTE AZ-Q1 = AZ-Q + 1
           COMPUTE AZ-R1 = AZ-R + 1
           MOVE AZ-HEXSTR(AZ-Q1:1) TO AZ-CONVERT-HEXVAL(1:1)
           MOVE AZ-HEXSTR(AZ-R1:1) TO AZ-CONVERT-HEXVAL(2:1)
           EXIT.
       THROW-ASSERTION.
           MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
           STRING 'COMPARE FAILED IN PROCEDURE DIVISION.'
             DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
             WITH POINTER MESSAGE-LEN OF BZ-ASSERT
           END-STRING
           SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
           SET ADDRESS OF AZ-COMPARE-ITEM-NAME TO
           AZ-COMPARE-ITEM-NAME-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-VALUE TO
           AZ-COMPARE-ITEM-VALUE-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-EXP-VALUE TO
           AZ-COMPARE-ITEM-EXP-VALUE-PTR.
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           DISPLAY 'AZU2001W THE TEST "' AZ-TEST(1:AZ-TEST-NAME-LEN) '"
      -    'FAILED DUE TO AN ASSERTION.'
           DISPLAY 'AZU1101I ' MESSAGE-TXT OF BZ-ASSERT(1:MESSAGE-LEN
           OF BZ-ASSERT)
           DISPLAY 'AZU0000I  DATA ITEM NAME : '
           AZ-COMPARE-ITEM-NAME(1:AZ-COMPARE-ITEM-NAME-LEN)
           DISPLAY 'AZU0000I   VALUE         : '
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
           DISPLAY 'AZU0000I   EXPECTED VALUE: '
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           CALL BZUASSRT USING BZ-P1 BZ-P2 BZ-P3 BZ-ASSERT
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           MOVE 1 TO AZ-ITEM-NAME-S
           PERFORM UNTIL AZ-ITEM-NAME-S > AZ-COMPARE-ITEM-NAME-LEN
             MOVE 206 TO AZ-ITEM-NAME-LEN
             IF AZ-ITEM-NAME-S + 206 > AZ-COMPARE-ITEM-NAME-LEN THEN
               MOVE AZ-COMPARE-ITEM-NAME-LEN TO AZ-ITEM-NAME-LEN
               SUBTRACT AZ-ITEM-NAME-S FROM AZ-ITEM-NAME-LEN
               ADD 1 TO AZ-ITEM-NAME-LEN
             END-IF
             STRING 'ITEM NAME='
             AZ-COMPARE-ITEM-NAME(AZ-ITEM-NAME-S:AZ-ITEM-NAME-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
             SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
             SET AZ-TRACE-PTR TO ADDRESS OF TRACE-TXT OF BZ-TRACE
             CALL BZUTRACE USING BZ-TRACE
             MOVE 1 TO TRACE-LEN OF BZ-TRACE
             ADD AZ-ITEM-NAME-LEN TO AZ-ITEM-NAME-S
           END-PERFORM
           STRING 'VALUE   ='
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'EXPECTED='
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           EXIT.
       END PROGRAM TEST_TEST3.
      *+---------------------------------------------------------------+
      *| BZU_TEST                                                      |
      *|     THIS PROGRAM IS CALLBACK DEFINITION FOR TEST              |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'BZU_TEST'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'LGICDB01'.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       01 AZ-GRP-INDEX        PIC 9(8).
       01 AZ-FLAG-IN          PIC 9(1).
       01 AZ-RECORD-PTR       POINTER.
       01 AZ-RC-WORK          PIC S9(4) USAGE BINARY.
       01 AZ-OUTPUT-COUNT-STR PIC X(5).
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
      *  *** DFHEIBLK : ZUT0000008B
       1 ZUT0000008B.
      *    *** EIBTIME : ZUT0000008C
         2 ZUT0000008C PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000008D
         2 ZUT0000008D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000008E
         2 ZUT0000008E PICTURE X(4).
      *    *** EIBTASKN : ZUT0000008F
         2 ZUT0000008F PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT00000090
         2 ZUT00000090 PICTURE X(4).
      *    *** DFHEIGDI : ZUT00000091
         2 ZUT00000091 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000092
         2 ZUT00000092 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000093
         2 ZUT00000093 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000094
         2 ZUT00000094 PICTURE X(1).
      *    *** EIBFN : ZUT00000095
         2 ZUT00000095 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000096
         2 ZUT00000096 PICTURE X(6).
      *    *** EIBDS : ZUT00000097
         2 ZUT00000097 PICTURE X(8).
      *    *** EIBREQID : ZUT00000098
         2 ZUT00000098 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000099
         2 ZUT00000099 PICTURE X(8).
      *    *** EIBSYNC : ZUT0000009A
         2 ZUT0000009A PICTURE X.
      *    *** EIBFREE : ZUT0000009B
         2 ZUT0000009B PICTURE X.
      *    *** EIBRECV : ZUT0000009C
         2 ZUT0000009C PICTURE X.
      *    *** EIBSEND : ZUT0000009D
         2 ZUT0000009D PICTURE X.
      *    *** EIBATT : ZUT0000009E
         2 ZUT0000009E PICTURE X.
      *    *** EIBEOC : ZUT0000009F
         2 ZUT0000009F PICTURE X.
      *    *** EIBFMH : ZUT000000A0
         2 ZUT000000A0 PICTURE X.
      *    *** EIBCOMPL : ZUT000000A1
         2 ZUT000000A1 PICTURE X(1).
      *    *** EIBSIG : ZUT000000A2
         2 ZUT000000A2 PICTURE X(1).
      *    *** EIBCONF : ZUT000000A3
         2 ZUT000000A3 PICTURE X(1).
      *    *** EIBERR : ZUT000000A4
         2 ZUT000000A4 PICTURE X(1).
      *    *** EIBERRCD : ZUT000000A5
         2 ZUT000000A5 PICTURE X(4).
      *    *** EIBSYNRB : ZUT000000A6
         2 ZUT000000A6 PICTURE X.
      *    *** EIBNODAT : ZUT000000A7
         2 ZUT000000A7 PICTURE X.
      *    *** EIBRESP : ZUT000000A8
         2 ZUT000000A8 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT000000A9
         2 ZUT000000A9 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT000000AA
         2 ZUT000000AA PICTURE X(1).
      *  *** DFHCOMMAREA : ZUT000000AB
       1 ZUT000000AB.
      *    *** CA-REQUEST-ID : ZUT000000AC
         3 ZUT000000AC PIC X(6).
      *    *** CA-RETURN-CODE : ZUT000000AD
         3 ZUT000000AD PIC 9(2).
      *    *** CA-CUSTOMER-NUM : ZUT000000AE
         3 ZUT000000AE PIC 9(10).
      *    *** CA-REQUEST-SPECIFIC : ZUT000000AF
         3 ZUT000000AF PIC X(32482).
      *    *** CA-CUSTOMER-REQUEST : ZUT000000B0
         3 ZUT000000B0 REDEFINES ZUT000000AF.
      *    *** CA-FIRST-NAME : ZUT000000B1
         5 ZUT000000B1 PIC X(10).
      *    *** CA-LAST-NAME : ZUT000000B2
         5 ZUT000000B2 PIC X(20).
      *    *** CA-DOB : ZUT000000B3
         5 ZUT000000B3 PIC X(10).
      *    *** CA-HOUSE-NAME : ZUT000000B4
         5 ZUT000000B4 PIC X(20).
      *    *** CA-HOUSE-NUM : ZUT000000B5
         5 ZUT000000B5 PIC X(4).
      *    *** CA-POSTCODE : ZUT000000B6
         5 ZUT000000B6 PIC X(8).
      *    *** CA-NUM-POLICIES : ZUT000000B7
         5 ZUT000000B7 PIC 9(3).
      *    *** CA-PHONE-MOBILE : ZUT000000B8
         5 ZUT000000B8 PIC X(20).
      *    *** CA-PHONE-HOME : ZUT000000B9
         5 ZUT000000B9 PIC X(20).
      *    *** CA-EMAIL-ADDRESS : ZUT000000BA
         5 ZUT000000BA PIC X(100).
      *    *** CA-POLICY-DATA : ZUT000000BB
         5 ZUT000000BB PIC X(32267).
      *    *** CA-CUSTSECR-REQUEST : ZUT000000BC
         3 ZUT000000BC REDEFINES ZUT000000AF.
      *    *** CA-CUSTSECR-PASS : ZUT000000BD
         5 ZUT000000BD PIC X(32).
      *    *** CA-CUSTSECR-COUNT : ZUT000000BE
         5 ZUT000000BE PIC X(4).
      *    *** CA-CUSTSECR-STATE : ZUT000000BF
         5 ZUT000000BF PIC X.
      *    *** CA-CUSTSECR-DATA : ZUT000000C0
         5 ZUT000000C0 PIC X(32445).
      *    *** CA-POLICY-REQUEST : ZUT000000C1
         3 ZUT000000C1 REDEFINES ZUT000000AF.
      *    *** CA-POLICY-NUM : ZUT000000C2
         5 ZUT000000C2 PIC 9(10).
          5 ZUT000000C2-AZ REDEFINES ZUT000000C2.
          6 PIC X(10) DISPLAY.
      *    *** CA-POLICY-COMMON : ZUT000000C3
         5 ZUT000000C3.
      *    *** CA-ISSUE-DATE : ZUT000000C4
         7 ZUT000000C4 PIC X(10).
      *    *** CA-EXPIRY-DATE : ZUT000000C5
         7 ZUT000000C5 PIC X(10).
      *    *** CA-LASTCHANGED : ZUT000000C6
         7 ZUT000000C6 PIC X(26).
      *    *** CA-BROKERID : ZUT000000C7
         7 ZUT000000C7 PIC 9(10).
          7 ZUT000000C7-AZ REDEFINES ZUT000000C7.
          8 PIC X(10) DISPLAY.
      *    *** CA-BROKERSREF : ZUT000000C8
         7 ZUT000000C8 PIC X(10).
      *    *** CA-PAYMENT : ZUT000000C9
         7 ZUT000000C9 PIC 9(6).
          7 ZUT000000C9-AZ REDEFINES ZUT000000C9.
          8 PIC X(6) DISPLAY.
      *    *** CA-POLICY-SPECIFIC : ZUT000000CA
         5 ZUT000000CA PIC X(32400).
      *    *** CA-ENDOWMENT : ZUT000000CB
         5 ZUT000000CB REDEFINES ZUT000000CA.
      *    *** CA-E-WITH-PROFITS : ZUT000000CC
         7 ZUT000000CC PIC X.
      *    *** CA-E-EQUITIES : ZUT000000CD
         7 ZUT000000CD PIC X.
      *    *** CA-E-MANAGED-FUND : ZUT000000CE
         7 ZUT000000CE PIC X.
      *    *** CA-E-FUND-NAME : ZUT000000CF
         7 ZUT000000CF PIC X(10).
      *    *** CA-E-TERM : ZUT000000D0
         7 ZUT000000D0 PIC 99.
      *    *** CA-E-SUM-ASSURED : ZUT000000D1
         7 ZUT000000D1 PIC 9(6).
      *    *** CA-E-LIFE-ASSURED : ZUT000000D2
         7 ZUT000000D2 PIC X(31).
      *    *** CA-E-PADDING-DATA : ZUT000000D3
         7 ZUT000000D3 PIC X(32348).
      *    *** CA-HOUSE : ZUT000000D4
         5 ZUT000000D4 REDEFINES ZUT000000CA.
      *    *** CA-H-PROPERTY-TYPE : ZUT000000D5
         7 ZUT000000D5 PIC X(15).
      *    *** CA-H-BEDROOMS : ZUT000000D6
         7 ZUT000000D6 PIC 9(3).
      *    *** CA-H-VALUE : ZUT000000D7
         7 ZUT000000D7 PIC 9(8).
      *    *** CA-H-HOUSE-NAME : ZUT000000D8
         7 ZUT000000D8 PIC X(20).
      *    *** CA-H-HOUSE-NUMBER : ZUT000000D9
         7 ZUT000000D9 PIC X(4).
      *    *** CA-H-POSTCODE : ZUT000000DA
         7 ZUT000000DA PIC X(8).
      *    *** CA-H-FILLER : ZUT000000DB
         7 ZUT000000DB PIC X(32342).
      *    *** CA-MOTOR : ZUT000000DC
         5 ZUT000000DC REDEFINES ZUT000000CA.
      *    *** CA-M-MAKE : ZUT000000DD
         7 ZUT000000DD PIC X(15).
      *    *** CA-M-MODEL : ZUT000000DE
         7 ZUT000000DE PIC X(15).
      *    *** CA-M-VALUE : ZUT000000DF
         7 ZUT000000DF PIC 9(6).
      *    *** CA-M-REGNUMBER : ZUT000000E0
         7 ZUT000000E0 PIC X(7).
      *    *** CA-M-COLOUR : ZUT000000E1
         7 ZUT000000E1 PIC X(8).
      *    *** CA-M-CC : ZUT000000E2
         7 ZUT000000E2 PIC 9(4).
      *    *** CA-M-MANUFACTURED : ZUT000000E3
         7 ZUT000000E3 PIC X(10).
      *    *** CA-M-PREMIUM : ZUT000000E4
         7 ZUT000000E4 PIC 9(6).
      *    *** CA-M-ACCIDENTS : ZUT000000E5
         7 ZUT000000E5 PIC 9(6).
      *    *** CA-M-FILLER : ZUT000000E6
         7 ZUT000000E6 PIC X(32323).
      *    *** CA-COMMERCIAL : ZUT000000E7
         5 ZUT000000E7 REDEFINES ZUT000000CA.
      *    *** CA-B-ADDRESS : ZUT000000E8
         7 ZUT000000E8 PIC X(255).
      *    *** CA-B-POSTCODE : ZUT000000E9
         7 ZUT000000E9 PIC X(8).
      *    *** CA-B-LATITUDE : ZUT000000EA
         7 ZUT000000EA PIC X(11).
      *    *** CA-B-LONGITUDE : ZUT000000EB
         7 ZUT000000EB PIC X(11).
      *    *** CA-B-CUSTOMER : ZUT000000EC
         7 ZUT000000EC PIC X(255).
      *    *** CA-B-PROPTYPE : ZUT000000ED
         7 ZUT000000ED PIC X(255).
      *    *** CA-B-FIREPERIL : ZUT000000EE
         7 ZUT000000EE PIC 9(4).
      *    *** CA-B-FIREPREMIUM : ZUT000000EF
         7 ZUT000000EF PIC 9(8).
      *    *** CA-B-CRIMEPERIL : ZUT000000F0
         7 ZUT000000F0 PIC 9(4).
      *    *** CA-B-CRIMEPREMIUM : ZUT000000F1
         7 ZUT000000F1 PIC 9(8).
      *    *** CA-B-FLOODPERIL : ZUT000000F2
         7 ZUT000000F2 PIC 9(4).
      *    *** CA-B-FLOODPREMIUM : ZUT000000F3
         7 ZUT000000F3 PIC 9(8).
      *    *** CA-B-WEATHERPERIL : ZUT000000F4
         7 ZUT000000F4 PIC 9(4).
      *    *** CA-B-WEATHERPREMIUM : ZUT000000F5
         7 ZUT000000F5 PIC 9(8).
      *    *** CA-B-STATUS : ZUT000000F6
         7 ZUT000000F6 PIC 9(4).
      *    *** CA-B-REJECTREASON : ZUT000000F7
         7 ZUT000000F7 PIC X(255).
      *    *** CA-B-FILLER : ZUT000000F8
         7 ZUT000000F8 PIC X(31298).
      *    *** CA-CLAIM : ZUT000000F9
         5 ZUT000000F9 REDEFINES ZUT000000CA.
      *    *** CA-C-NUM : ZUT000000FA
         7 ZUT000000FA PIC 9(10).
          7 ZUT000000FA-AZ REDEFINES ZUT000000FA.
          8 PIC X(10) DISPLAY.
      *    *** CA-C-DATE : ZUT000000FB
         7 ZUT000000FB PIC X(10).
      *    *** CA-C-PAID : ZUT000000FC
         7 ZUT000000FC PIC 9(8).
          7 ZUT000000FC-AZ REDEFINES ZUT000000FC.
          8 PIC X(8) DISPLAY.
      *    *** CA-C-VALUE : ZUT000000FD
         7 ZUT000000FD PIC 9(8).
          7 ZUT000000FD-AZ REDEFINES ZUT000000FD.
          8 PIC X(8) DISPLAY.
      *    *** CA-C-CAUSE : ZUT000000FE
         7 ZUT000000FE PIC X(255).
      *    *** CA-C-OBSERVATIONS : ZUT000000FF
         7 ZUT000000FF PIC X(255).
      *    *** CA-C-FILLER : ZUT00000100
         7 ZUT00000100 PIC X(31854).
       01 AZ-RECORD-COUNT     PIC 9(5) COMP-5.
       PROCEDURE DIVISION.
      * SET INPUT VALUE
           ENTRY "PGM_INPT_LGICDB01" USING AZ-TEST AZ-INFO-BLOCK
           ZUT0000008B ZUT000000AB.
           DISPLAY 'AZU0000I PGM_INPT_LGICDB01 INPUT VALUES...'.
           MOVE 0 TO RETURN-CODE.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR CHARACTERS
             BEFORE INITIAL SPACE.
           EVALUATE AZ-TEST(1:AZ-TEST-NAME-LEN)
           WHEN SPACE
             CONTINUE
           WHEN OTHER
             CONTINUE
           END-EVALUATE.
           PERFORM TEARDOWN.
      * EVALUATE OUTPUT VALUE
           ENTRY "PGM_OUTP_LGICDB01" USING AZ-TEST AZ-INFO-BLOCK
           ZUT0000008B ZUT000000AB.
           DISPLAY 'AZU0000I PGM_OUTP_LGICDB01 CHECK VALUES...'.
           MOVE 4 TO RETURN-CODE.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR CHARACTERS
             BEFORE INITIAL SPACE.
           EVALUATE AZ-TEST(1:AZ-TEST-NAME-LEN)
           WHEN SPACE
             CONTINUE
           WHEN 'TEST1'
             PERFORM CHECK-REC-TEST1
             MOVE 0 TO RETURN-CODE
           WHEN 'TEST2'
             PERFORM CHECK-REC-TEST2
             MOVE 0 TO RETURN-CODE
           WHEN 'TEST3'
             PERFORM CHECK-REC-TEST3
             MOVE 0 TO RETURN-CODE
           WHEN OTHER
             CONTINUE
           END-EVALUATE.
           PERFORM TEARDOWN.
       TEARDOWN.
           DISPLAY 'AZU0000I BZU_TEST SUCCESSFUL.'
           GOBACK.
       CHECK-REC-TEST1.
      * CHECK RECORD COUNT FOR TEST1
      * FOR SQL SELECT_INTO ''CUSTOMER''
           MOVE 6 TO AZ-GRP-INDEX
           MOVE 0 TO AZ-FLAG-IN
           MOVE RETURN-CODE TO AZ-RC-WORK
           CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
             AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
           SET ADDRESS OF AZ-RECORD-COUNT TO AZ-RECORD-PTR
           MOVE AZ-RC-WORK TO RETURN-CODE
           IF AZ-RECORD-COUNT < 1 THEN
             MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
             MOVE AZ-RECORD-COUNT TO AZ-OUTPUT-COUNT-STR
             STRING
               'EXPECTED MAX RECORD COUNT IS ''1''. '
               'BUT REAL RECORD COUNT IS ''' AZ-OUTPUT-COUNT-STR ''''
               ' IN SQL SELECT_INTO ''CUSTOMER''.'
               DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
               WITH POINTER MESSAGE-LEN OF BZ-ASSERT
             END-STRING
             SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
             PERFORM THROW-ASSERTION-M
           END-IF.
           EXIT.
       CHECK-REC-TEST2.
      * CHECK RECORD COUNT FOR TEST2
      * FOR SQL SELECT_INTO ''CUSTOMER''
           MOVE 6 TO AZ-GRP-INDEX
           MOVE 0 TO AZ-FLAG-IN
           MOVE RETURN-CODE TO AZ-RC-WORK
           CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
             AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
           SET ADDRESS OF AZ-RECORD-COUNT TO AZ-RECORD-PTR
           MOVE AZ-RC-WORK TO RETURN-CODE
           IF AZ-RECORD-COUNT < 1 THEN
             MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
             MOVE AZ-RECORD-COUNT TO AZ-OUTPUT-COUNT-STR
             STRING
               'EXPECTED MAX RECORD COUNT IS ''1''. '
               'BUT REAL RECORD COUNT IS ''' AZ-OUTPUT-COUNT-STR ''''
               ' IN SQL SELECT_INTO ''CUSTOMER''.'
               DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
               WITH POINTER MESSAGE-LEN OF BZ-ASSERT
             END-STRING
             SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
             PERFORM THROW-ASSERTION-M
           END-IF.
           EXIT.
       CHECK-REC-TEST3.
      * CHECK RECORD COUNT FOR TEST3
      * FOR SQL SELECT_INTO ''CUSTOMER''
           MOVE 6 TO AZ-GRP-INDEX
           MOVE 0 TO AZ-FLAG-IN
           MOVE RETURN-CODE TO AZ-RC-WORK
           CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
             AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
           SET ADDRESS OF AZ-RECORD-COUNT TO AZ-RECORD-PTR
           MOVE AZ-RC-WORK TO RETURN-CODE
           IF AZ-RECORD-COUNT < 1 THEN
             MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
             MOVE AZ-RECORD-COUNT TO AZ-OUTPUT-COUNT-STR
             STRING
               'EXPECTED MAX RECORD COUNT IS ''1''. '
               'BUT REAL RECORD COUNT IS ''' AZ-OUTPUT-COUNT-STR ''''
               ' IN SQL SELECT_INTO ''CUSTOMER''.'
               DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
               WITH POINTER MESSAGE-LEN OF BZ-ASSERT
             END-STRING
             SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
             PERFORM THROW-ASSERTION-M
           END-IF.
           EXIT.
       THROW-ASSERTION-M.
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           DISPLAY 'AZU2001W THE TEST "' AZ-TEST(1:AZ-TEST-NAME-LEN) '"
      -    'FAILED DUE TO AN ASSERTION.'
           DISPLAY 'AZU1101I ' MESSAGE-TXT OF BZ-ASSERT(1:MESSAGE-LEN
           OF BZ-ASSERT)
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           CALL BZUASSRT USING BZ-P1 BZ-P2 BZ-P3 BZ-ASSERT
           EXIT.
       END PROGRAM BZU_TEST.
      *+---------------------------------------------------------------+
      *| BZU_INIT                                                      |
      *|     INITIAL PROCEDURE                                         |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'BZU_INIT'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 AZ-TEST-NAME-LEN      PIC S9(9) COMP-5.
       01 AZ-TESTCASE-ID        PIC X(36)
           VALUE '974fd65b-2f35-4a9d-bc09-63b28005769e'.
       LINKAGE SECTION.
       01 AZ-TEST               PIC X(80).
       01 AZ-TEST-ID            PIC X(80).
       PROCEDURE DIVISION USING AZ-TEST AZ-TEST-ID.
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
           DISPLAY 'AZU0000I BZU_INIT : ' AZ-TEST(1:AZ-TEST-NAME-LEN)
           MOVE AZ-TESTCASE-ID TO AZ-TEST-ID
           GOBACK.
       END PROGRAM BZU_INIT.
      *+---------------------------------------------------------------+
      *| BZU_TERM                                                      |
      *|     TERMINATION PROCEDURE                                     |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'BZU_TERM'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 AZ-TEST-NAME-LEN      PIC S9(9) COMP-5.
       LINKAGE SECTION.
       01 AZ-TEST               PIC X(80).
       PROCEDURE DIVISION USING AZ-TEST.
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
           DISPLAY 'AZU0000I BZU_TERM : ' AZ-TEST(1:AZ-TEST-NAME-LEN)
           GOBACK.
       END PROGRAM BZU_TERM.
      *+---------------------------------------------------------------+
      *| EVALOPT                                                       |
      *|   FUNCTION TO EVALUATE THAT THE BIT OF OPTION DATA            |
      *|   (1) TAKE AND OF GROUP COMMON MASK AND OPTION IN ARG0        |
      *|   (2) CHECK IF THE GROUP MASK IS EQUAL TO (1)                 |
      *|       IF EQUAL,    RTN01 IS 0                                 |
      *|       IF NO EQUAL, RTN01 IS 1                                 |
      *+---------------------------------------------------------------+
       ID DIVISION.
       PROGRAM-ID. EVALOPT.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  OUT1-REC.
         05 OUT1-DATA                PIC X(1) OCCURS 8.
       01 OUT1-DATA-R REDEFINES OUT1-REC.
         05 OUT1-DATA-UP             PIC X(4).
         05 OUT1-DATA-DOWN           PIC X(4).
       01  OUT2-REC.
         05  OUT2-DATA               PIC X(1) OCCURS 8.
       01  OUT2-DATA-R REDEFINES OUT2-REC.
         05 OUT2-DATA-UP             PIC X(4).
         05 OUT2-DATA-DOWN           PIC X(4).
       01  WORK1-REC.
         05  WORK1-DATA              PIC X(1) OCCURS 8.
       01  WORK1-DATA-R REDEFINES WORK1-REC.
         05 WORK1-DATA-UP            PIC X(4).
         05 WORK1-DATA-DOWN          PIC X(4).
       01  WORK-AREA.
         05  WORK-HEX-UP             PIC 9(4)  COMP.
         05  WORK-HEX-DOWN           PIC 9(4)  COMP.
       01  HEX-CHG-BEF.
         05  HEX-CHANGE-LV           PIC X(1) VALUE LOW-VALUE.
         05  HEX-CHANGE-BEFORE       PIC X(1).
       01  HEX-CHG-AFT      REDEFINES  HEX-CHG-BEF.
         05  HEX-CHANGE-AFTER        PIC 9(4)  COMP.
       01  TBL-CHANGE-DATA.
          05  FILLER                 PIC  X(004) VALUE '0000'.
          05  FILLER                 PIC  X(001) VALUE '0'.
          05  FILLER                 PIC  X(004) VALUE '0001'.
          05  FILLER                 PIC  X(001) VALUE '1'.
          05  FILLER                 PIC  X(004) VALUE '0010'.
          05  FILLER                 PIC  X(001) VALUE '2'.
          05  FILLER                 PIC  X(004) VALUE '0011'.
          05  FILLER                 PIC  X(001) VALUE '3'.
          05  FILLER                 PIC  X(004) VALUE '0100'.
          05  FILLER                 PIC  X(001) VALUE '4'.
          05  FILLER                 PIC  X(004) VALUE '0101'.
          05  FILLER                 PIC  X(001) VALUE '5'.
          05  FILLER                 PIC  X(004) VALUE '0110'.
          05  FILLER                 PIC  X(001) VALUE '6'.
          05  FILLER                 PIC  X(004) VALUE '0111'.
          05  FILLER                 PIC  X(001) VALUE '7'.
          05  FILLER                 PIC  X(004) VALUE '1000'.
          05  FILLER                 PIC  X(001) VALUE '8'.
          05  FILLER                 PIC  X(004) VALUE '1001'.
          05  FILLER                 PIC  X(001) VALUE '9'.
          05  FILLER                 PIC  X(004) VALUE '1010'.
          05  FILLER                 PIC  X(001) VALUE 'A'.
          05  FILLER                 PIC  X(004) VALUE '1011'.
          05  FILLER                 PIC  X(001) VALUE 'B'.
          05  FILLER                 PIC  X(004) VALUE '1100'.
          05  FILLER                 PIC  X(001) VALUE 'C'.
          05  FILLER                 PIC  X(004) VALUE '1101'.
          05  FILLER                 PIC  X(001) VALUE 'D'.
          05  FILLER                 PIC  X(004) VALUE '1110'.
          05  FILLER                 PIC  X(001) VALUE 'E'.
          05  FILLER                 PIC  X(004) VALUE '1111'.
          05  FILLER                 PIC  X(001) VALUE 'F'.
          01  TBL-DATA REDEFINES TBL-CHANGE-DATA.
           05  TBL-CHG  OCCURS  16 TIMES.
             10  TBL-BIT-CHAR        PIC  X(004).
             10  TBL-HEX-CHAR        PIC  X(001).
       01 BIT-COUNT                  PIC 9(1).
       01 I                          PIC S9(8) COMP.
       LINKAGE SECTION.
       01 G-MASK.
         03 D-G-MASK                 PIC X(1) OCCURS 19.
       01 COM-MASK.
         03 D-COM-MASK               PIC X(1) OCCURS 19.
       01 O-ARG0.
         03 D-O-ARG0                 PIC X(1) OCCURS 19.
       01 BYTE-COUNT                 PIC S9(8) COMP.
       01 RTN01                      PIC 9(1).
       01 AZ-TEST                    PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       PROCEDURE DIVISION USING G-MASK COM-MASK O-ARG0 BYTE-COUNT
            RTN01.
       MAINPROC SECTION.
            MOVE 0 TO RTN01
            PERFORM VARYING I FROM 1 BY 1 UNTIL I > BYTE-COUNT
              PERFORM ANDCOMMASK
              IF RTN01 = 1 THEN
                GOBACK
              END-IF
            END-PERFORM.
            EXIT PROGRAM.
       ANDCOMMASK.
      * CONVERT GROUP COMMON MASK TO BIT
            MOVE D-COM-MASK(I) TO HEX-CHANGE-BEFORE.
            DIVIDE 16 INTO HEX-CHANGE-AFTER GIVING WORK-HEX-UP
                                         REMAINDER WORK-HEX-DOWN.
            MOVE TBL-BIT-CHAR(WORK-HEX-UP + 1)   TO OUT1-DATA-UP.
            MOVE TBL-BIT-CHAR(WORK-HEX-DOWN + 1) TO OUT1-DATA-DOWN.
      * CONVERT OPTION IN ARG0 TO BIT
            MOVE D-O-ARG0(I) TO HEX-CHANGE-BEFORE.
            DIVIDE 16 INTO HEX-CHANGE-AFTER GIVING WORK-HEX-UP
                                         REMAINDER WORK-HEX-DOWN.
            MOVE TBL-BIT-CHAR(WORK-HEX-UP + 1)   TO OUT2-DATA-UP.
            MOVE TBL-BIT-CHAR(WORK-HEX-DOWN + 1) TO OUT2-DATA-DOWN.
      * CREATE EVAL BIT FROM GROUP COMMON MASK BIT AND ARG0 BIT
            PERFORM VARYING BIT-COUNT FROM 1 BY 1 UNTIL BIT-COUNT > 8
              IF OUT1-DATA(BIT-COUNT) = '1' AND
                 OUT2-DATA(BIT-COUNT) = '1' THEN
                MOVE '1' TO WORK1-DATA(BIT-COUNT)
              ELSE
                MOVE '0' TO WORK1-DATA(BIT-COUNT)
              END-IF
            END-PERFORM.
      * CONVERT GROUP MASK TO BIT DATA
            MOVE D-G-MASK(I) TO HEX-CHANGE-BEFORE.
            DIVIDE 16 INTO HEX-CHANGE-AFTER GIVING WORK-HEX-UP
                                         REMAINDER WORK-HEX-DOWN.
            MOVE TBL-BIT-CHAR(WORK-HEX-UP + 1)   TO OUT1-DATA-UP.
            MOVE TBL-BIT-CHAR(WORK-HEX-DOWN + 1) TO OUT1-DATA-DOWN.
      * CHECK IF EQUAL BETWEEN EVAL BIT AND GROUP MASK BIT
            IF WORK1-DATA-UP = OUT1-DATA-UP AND
               WORK1-DATA-DOWN = OUT1-DATA-DOWN THEN
              CONTINUE
            ELSE
              MOVE 1 TO RTN01
            END-IF
            EXIT.
       CB-ENTRY.
      * ENTRY FOR CALLBACK
           ENTRY "PGM_INPT_EVALOPT" USING AZ-TEST AZ-INFO-BLOCK
             G-MASK COM-MASK O-ARG0 BYTE-COUNT RTN01.
           PERFORM MAINPROC.
           EXIT.
       END PROGRAM 'EVALOPT'.
      *+---------------------------------------------------------------+
      *| GTMEMRC                                                       |
      *|     GET DATA AREA FOR RECORD COUNT OF SUBSYSTEM GROUP         |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'GTMEMRC'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZUGTMEM            PIC X(8) VALUE 'BZUGTMEM'.
       01 DATA-SIZE           PIC 9(8) COMP-4.
       LINKAGE SECTION.
       01 AZ-TC-WORK-AREA        PIC X(256).
       01 AZ-GRP-INDEX        PIC 9(8).
       01 AZ-FLAG-IN          PIC 9(1).
       01 AZ-RECORD-PTR       POINTER.
       01 AZ-RECORD-PTR-VALUE
            REDEFINES AZ-RECORD-PTR  PIC S9(9) COMP-5.
       01 DATA-PTR            POINTER.
       01 DATA-PTR-VALUE
            REDEFINES DATA-PTR  PIC S9(9) COMP-5.
       01 DATA-AREA.
         03 RECORD-COUNT-IO OCCURS 6.
           05 RECORD-COUNT-OT PIC 9(5) COMP-5.
           05 RECORD-COUNT-IN PIC 9(5) COMP-5.
       01 WK-RECORD-COUNT     PIC 9(5) COMP-5.
       01 AZ-TEST             PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       PROCEDURE DIVISION USING AZ-TC-WORK-AREA AZ-GRP-INDEX AZ-FLAG-IN
           AZ-RECORD-PTR.
       MAINPROC SECTION.
      * GET DATA AREA
           SET ADDRESS OF DATA-PTR TO ADDRESS OF AZ-TC-WORK-AREA.
           IF DATA-PTR-VALUE = 0 THEN
             COMPUTE DATA-SIZE = LENGTH OF WK-RECORD-COUNT * 2 * 6
             CALL BZUGTMEM USING DATA-SIZE RETURNING DATA-PTR
             SET ADDRESS OF DATA-AREA TO DATA-PTR
             DISPLAY 'AZU0000I AREA ALLOCATED FOR RECORD COUNT:'
           DATA-SIZE
           END-IF
           SET AZ-RECORD-PTR TO DATA-PTR
           COMPUTE AZ-RECORD-PTR-VALUE = AZ-RECORD-PTR-VALUE +
                 LENGTH OF WK-RECORD-COUNT * 2 * (AZ-GRP-INDEX - 1)
           IF AZ-FLAG-IN = 1 THEN
             ADD LENGTH OF WK-RECORD-COUNT TO AZ-RECORD-PTR-VALUE
           END-IF
           SET ADDRESS OF WK-RECORD-COUNT TO AZ-RECORD-PTR
           GOBACK.
       CB-ENTRY.
      * ENTRY FOR CALLBACK
           ENTRY "PGM_INPT_GTMEMRC" USING AZ-TEST AZ-INFO-BLOCK
             AZ-TC-WORK-AREA AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR.
           PERFORM MAINPROC.
           EXIT.
       END PROGRAM 'GTMEMRC'.
      *+---------------------------------------------------------------+
      *| AZU_GENERIC_CICS                                              |
      *|   GENERIC CICS CALLBACK EXIT POINT                            |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'AZU_GENERIC_CICS'.
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT.
           ENTRY 'CICS_INPT'.
           DISPLAY 'AZU0000I CICS_INPT ...'
           MOVE 4 TO RETURN-CODE.
           GOBACK.
      * CICS_OUTP.
           ENTRY 'CICS_OUTP'.
           DISPLAY 'AZU0000I CICS_OUTP ...'
           MOVE 4 TO RETURN-CODE.
           GOBACK.
      * CICS_INPT_0E08 FOR RETURN.
           ENTRY 'CICS_INPT_0E08'.
           DISPLAY 'AZU0000I CICS_INPT_0E08 ...'
           MOVE 0 TO RETURN-CODE.
           GOBACK.
       END PROGRAM 'AZU_GENERIC_CICS'.
      *+---------------------------------------------------------------+
      *| AZU_GENERIC_DB2                                               |
      *|   GENERIC DB2 CALLBACK EXIT POINT                             |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'AZU_GENERIC_DB2'.
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * DB2_INPT.
           ENTRY 'DB2_INPT'.
           DISPLAY 'AZU0000I DB2_INPT ...'
           MOVE 4 TO RETURN-CODE.
           GOBACK.
      * DB2_OUTP.
           ENTRY 'DB2_OUTP'.
           DISPLAY 'AZU0000I DB2_OUTP ...'
           MOVE 4 TO RETURN-CODE.
           GOBACK.
       END PROGRAM 'AZU_GENERIC_DB2'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS ABEND                                   |
      *|    FUNCTION CODE: 0E0C                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_0E0C_LGICDB01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM CICS CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN       PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-OPT-MASK-DATA2  PIC X(2).
       01 AZ-OPT-MASK-DATA9  PIC X(9).
       01 AZ-OPT-MASK-DATA11 PIC X(11).
       01 AZ-OPT-MASK-DATA19 PIC X(19).
       01 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       01 AZ-OPT-RC          PIC 9(1) VALUE 0.
       01 AZ-OPT-COMMASK.
         03  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       01 AZ-LINE-BYTE      PIC S9(2) COMP.
       01 AZ-LINE-NUM       PIC 9(5).
       01 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         03 AZ-LINE-NUM-RD  PIC 9(1) OCCURS 5.
       01 AZ-LINE-I         PIC S9(8) COMP.
       01 AZ-LINE-J         PIC S9(8) COMP.
       01 AZ-RC-WORK        PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       01 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       01 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
      *  *** DFHEIBLK : ZUT0000008B
       1 ZUT0000008B.
      *    *** EIBTIME : ZUT0000008C
         2 ZUT0000008C PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000008D
         2 ZUT0000008D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000008E
         2 ZUT0000008E PICTURE X(4).
      *    *** EIBTASKN : ZUT0000008F
         2 ZUT0000008F PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT00000090
         2 ZUT00000090 PICTURE X(4).
      *    *** DFHEIGDI : ZUT00000091
         2 ZUT00000091 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000092
         2 ZUT00000092 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000093
         2 ZUT00000093 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000094
         2 ZUT00000094 PICTURE X(1).
      *    *** EIBFN : ZUT00000095
         2 ZUT00000095 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000096
         2 ZUT00000096 PICTURE X(6).
      *    *** EIBDS : ZUT00000097
         2 ZUT00000097 PICTURE X(8).
      *    *** EIBREQID : ZUT00000098
         2 ZUT00000098 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000099
         2 ZUT00000099 PICTURE X(8).
      *    *** EIBSYNC : ZUT0000009A
         2 ZUT0000009A PICTURE X.
      *    *** EIBFREE : ZUT0000009B
         2 ZUT0000009B PICTURE X.
      *    *** EIBRECV : ZUT0000009C
         2 ZUT0000009C PICTURE X.
      *    *** EIBSEND : ZUT0000009D
         2 ZUT0000009D PICTURE X.
      *    *** EIBATT : ZUT0000009E
         2 ZUT0000009E PICTURE X.
      *    *** EIBEOC : ZUT0000009F
         2 ZUT0000009F PICTURE X.
      *    *** EIBFMH : ZUT000000A0
         2 ZUT000000A0 PICTURE X.
      *    *** EIBCOMPL : ZUT000000A1
         2 ZUT000000A1 PICTURE X(1).
      *    *** EIBSIG : ZUT000000A2
         2 ZUT000000A2 PICTURE X(1).
      *    *** EIBCONF : ZUT000000A3
         2 ZUT000000A3 PICTURE X(1).
      *    *** EIBERR : ZUT000000A4
         2 ZUT000000A4 PICTURE X(1).
      *    *** EIBERRCD : ZUT000000A5
         2 ZUT000000A5 PICTURE X(4).
      *    *** EIBSYNRB : ZUT000000A6
         2 ZUT000000A6 PICTURE X.
      *    *** EIBNODAT : ZUT000000A7
         2 ZUT000000A7 PICTURE X.
      *    *** EIBRESP : ZUT000000A8
         2 ZUT000000A8 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT000000A9
         2 ZUT000000A9 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT000000AA
         2 ZUT000000AA PICTURE X(1).
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_0E0C_LGICDB01.
           ENTRY 'CICS_INPT_0E0C_LGICDB01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT0000008B AZ-DFHCOMMAREA ARG0 ARG1.
           DISPLAY 'AZU0000I CICS_0E0C_LGICDB01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'8000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS ABEND X'8000'
           IF ARG0-1 = X'0E0C'
             MOVE X'8000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS ABEND X''8000'''
                ' L=' AZ-LINE-NUM
               MOVE 1 TO AZ-GRP-INDEX
               MOVE 0 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_0E0C_LGICDB01.
           ENTRY 'CICS_OUTP_0E0C_LGICDB01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT0000008B AZ-DFHCOMMAREA ARG0 ARG1.
           DISPLAY 'AZU0000I CICS_0E0C_LGICDB01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'8000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS ABEND X'8000'
           IF ARG0-1 = X'0E0C'
             MOVE X'8000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS ABEND X''8000'''
                ' L=' AZ-LINE-NUM
               MOVE 1 TO AZ-GRP-INDEX
               MOVE 1 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 4
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       TEARDOWN.
           DISPLAY 'AZU0000I CICS_0E0C_LGICDB01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'CICS_0E0C_LGICDB01'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS RETURN                                  |
      *|    FUNCTION CODE: 0E08                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_0E08_LGICDB01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM CICS CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN       PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-OPT-MASK-DATA2  PIC X(2).
       01 AZ-OPT-MASK-DATA9  PIC X(9).
       01 AZ-OPT-MASK-DATA11 PIC X(11).
       01 AZ-OPT-MASK-DATA19 PIC X(19).
       01 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       01 AZ-OPT-RC          PIC 9(1) VALUE 0.
       01 AZ-OPT-COMMASK.
         03  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       01 AZ-LINE-BYTE      PIC S9(2) COMP.
       01 AZ-LINE-NUM       PIC 9(5).
       01 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         03 AZ-LINE-NUM-RD  PIC 9(1) OCCURS 5.
       01 AZ-LINE-I         PIC S9(8) COMP.
       01 AZ-LINE-J         PIC S9(8) COMP.
       01 AZ-RC-WORK        PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 ARG2            POINTER.
       01 ARG3            POINTER.
       01 ARG4            POINTER.
       01 ARG5            POINTER.
       01 ARG6            POINTER.
       01 ARG7            POINTER.
       01 ARG8            POINTER.
       01 ARG9            POINTER.
       01 ARG10           POINTER.
       01 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       01 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       01 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_0E08_LGICDB01.
           ENTRY 'CICS_INPT_0E08_LGICDB01' USING AZ-TEST
           AZ-INFO-BLOCK AZ-DFHEIBLK AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10.
           DISPLAY 'AZU0000I CICS_0E08_LGICDB01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'0000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS RETURN X'0000'
           IF ARG0-1 = X'0E08'
             MOVE X'0000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS RETURN X''0000'''
                ' L=' AZ-LINE-NUM
               MOVE 2 TO AZ-GRP-INDEX
               MOVE 0 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN 'TEST1'
                   PERFORM O0E080-TEST1
                   CONTINUE
                 WHEN 'TEST2'
                   PERFORM O0E080-TEST2
                   CONTINUE
                 WHEN 'TEST3'
                   PERFORM O0E080-TEST3
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_0E08_LGICDB01.
           ENTRY 'CICS_OUTP_0E08_LGICDB01' USING AZ-TEST
           AZ-INFO-BLOCK AZ-DFHEIBLK AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10.
           DISPLAY 'AZU0000I CICS_0E08_LGICDB01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'0000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS RETURN X'0000'
           IF ARG0-1 = X'0E08'
             MOVE X'0000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS RETURN X''0000'''
                ' L=' AZ-LINE-NUM
               MOVE 2 TO AZ-GRP-INDEX
               MOVE 1 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN 'TEST1'
                   CONTINUE
                 WHEN 'TEST2'
                   CONTINUE
                 WHEN 'TEST3'
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
       O0E080-TEST1.
           MOVE 0 TO RETURN-CODE
           IF AZ-RECORD-COUNT-OT(1) = 0 THEN
             CONTINUE
           ELSE
             CONTINUE
           END-IF.
       O0E080-TEST2.
           MOVE 0 TO RETURN-CODE
           IF AZ-RECORD-COUNT-OT(1) = 0 THEN
             CONTINUE
           ELSE
             CONTINUE
           END-IF.
       O0E080-TEST3.
           MOVE 0 TO RETURN-CODE
           IF AZ-RECORD-COUNT-OT(1) = 0 THEN
             CONTINUE
           ELSE
             CONTINUE
           END-IF.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 4
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       TEARDOWN.
           DISPLAY 'AZU0000I CICS_0E08_LGICDB01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'CICS_0E08_LGICDB01'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS ASKTIME                                 |
      *|    FUNCTION CODE: 4A02                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_4A02_LGICDB01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM CICS CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN       PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-OPT-MASK-DATA2  PIC X(2).
       01 AZ-OPT-MASK-DATA9  PIC X(9).
       01 AZ-OPT-MASK-DATA11 PIC X(11).
       01 AZ-OPT-MASK-DATA19 PIC X(19).
       01 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       01 AZ-OPT-RC          PIC 9(1) VALUE 0.
       01 AZ-OPT-COMMASK.
         03  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       01 AZ-LINE-BYTE      PIC S9(2) COMP.
       01 AZ-LINE-NUM       PIC 9(5).
       01 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         03 AZ-LINE-NUM-RD  PIC 9(1) OCCURS 5.
       01 AZ-LINE-I         PIC S9(8) COMP.
       01 AZ-LINE-J         PIC S9(8) COMP.
       01 AZ-RC-WORK        PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       01 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       01 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
      *  *** DFHEIBLK : ZUT0000008B
       1 ZUT0000008B.
      *    *** EIBTIME : ZUT0000008C
         2 ZUT0000008C PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000008D
         2 ZUT0000008D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000008E
         2 ZUT0000008E PICTURE X(4).
      *    *** EIBTASKN : ZUT0000008F
         2 ZUT0000008F PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT00000090
         2 ZUT00000090 PICTURE X(4).
      *    *** DFHEIGDI : ZUT00000091
         2 ZUT00000091 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000092
         2 ZUT00000092 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000093
         2 ZUT00000093 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000094
         2 ZUT00000094 PICTURE X(1).
      *    *** EIBFN : ZUT00000095
         2 ZUT00000095 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000096
         2 ZUT00000096 PICTURE X(6).
      *    *** EIBDS : ZUT00000097
         2 ZUT00000097 PICTURE X(8).
      *    *** EIBREQID : ZUT00000098
         2 ZUT00000098 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000099
         2 ZUT00000099 PICTURE X(8).
      *    *** EIBSYNC : ZUT0000009A
         2 ZUT0000009A PICTURE X.
      *    *** EIBFREE : ZUT0000009B
         2 ZUT0000009B PICTURE X.
      *    *** EIBRECV : ZUT0000009C
         2 ZUT0000009C PICTURE X.
      *    *** EIBSEND : ZUT0000009D
         2 ZUT0000009D PICTURE X.
      *    *** EIBATT : ZUT0000009E
         2 ZUT0000009E PICTURE X.
      *    *** EIBEOC : ZUT0000009F
         2 ZUT0000009F PICTURE X.
      *    *** EIBFMH : ZUT000000A0
         2 ZUT000000A0 PICTURE X.
      *    *** EIBCOMPL : ZUT000000A1
         2 ZUT000000A1 PICTURE X(1).
      *    *** EIBSIG : ZUT000000A2
         2 ZUT000000A2 PICTURE X(1).
      *    *** EIBCONF : ZUT000000A3
         2 ZUT000000A3 PICTURE X(1).
      *    *** EIBERR : ZUT000000A4
         2 ZUT000000A4 PICTURE X(1).
      *    *** EIBERRCD : ZUT000000A5
         2 ZUT000000A5 PICTURE X(4).
      *    *** EIBSYNRB : ZUT000000A6
         2 ZUT000000A6 PICTURE X.
      *    *** EIBNODAT : ZUT000000A7
         2 ZUT000000A7 PICTURE X.
      *    *** EIBRESP : ZUT000000A8
         2 ZUT000000A8 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT000000A9
         2 ZUT000000A9 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT000000AA
         2 ZUT000000AA PICTURE X(1).
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_4A02_LGICDB01.
           ENTRY 'CICS_INPT_4A02_LGICDB01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT0000008B AZ-DFHCOMMAREA ARG0 ARG1.
           DISPLAY 'AZU0000I CICS_4A02_LGICDB01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'8000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS ASKTIME X'8000'
           IF ARG0-1 = X'4A02'
             MOVE X'8000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 7 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS ASKTIME X''8000'''
                ' L=' AZ-LINE-NUM
               MOVE 3 TO AZ-GRP-INDEX
               MOVE 0 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_4A02_LGICDB01.
           ENTRY 'CICS_OUTP_4A02_LGICDB01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT0000008B AZ-DFHCOMMAREA ARG0 ARG1.
           DISPLAY 'AZU0000I CICS_4A02_LGICDB01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'8000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS ASKTIME X'8000'
           IF ARG0-1 = X'4A02'
             MOVE X'8000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 7 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS ASKTIME X''8000'''
                ' L=' AZ-LINE-NUM
               MOVE 3 TO AZ-GRP-INDEX
               MOVE 1 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 4
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       TEARDOWN.
           DISPLAY 'AZU0000I CICS_4A02_LGICDB01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'CICS_4A02_LGICDB01'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS FORMATTIME                              |
      *|    FUNCTION CODE: 4A04                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_4A04_LGICDB01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM CICS CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN       PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-OPT-MASK-DATA2  PIC X(2).
       01 AZ-OPT-MASK-DATA9  PIC X(9).
       01 AZ-OPT-MASK-DATA11 PIC X(11).
       01 AZ-OPT-MASK-DATA19 PIC X(19).
       01 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       01 AZ-OPT-RC          PIC 9(1) VALUE 0.
       01 AZ-OPT-COMMASK.
         03  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       01 AZ-LINE-BYTE      PIC S9(2) COMP.
       01 AZ-LINE-NUM       PIC 9(5).
       01 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         03 AZ-LINE-NUM-RD  PIC 9(1) OCCURS 5.
       01 AZ-LINE-I         PIC S9(8) COMP.
       01 AZ-LINE-J         PIC S9(8) COMP.
       01 AZ-RC-WORK        PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 ARG2            POINTER.
       01 ARG3            POINTER.
       01 ARG4            POINTER.
       01 ARG5            POINTER.
       01 ARG6            POINTER.
       01 ARG7            POINTER.
       01 ARG8            POINTER.
       01 ARG9            POINTER.
       01 ARG10           POINTER.
       01 ARG11           POINTER.
       01 ARG12           POINTER.
       01 ARG13           POINTER.
       01 ARG14           POINTER.
       01 ARG15           POINTER.
       01 ARG16           POINTER.
       01 ARG17           POINTER.
       01 ARG18           POINTER.
       01 ARG19           POINTER.
       01 ARG20           POINTER.
       01 ARG21           POINTER.
       01 ARG22           POINTER.
       01 ARG23           POINTER.
       01 ARG24           POINTER.
       01 ARG25           POINTER.
       01 ARG26           POINTER.
       01 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       01 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       01 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
      *  *** DFHEIBLK : ZUT0000008B
       1 ZUT0000008B.
      *    *** EIBTIME : ZUT0000008C
         2 ZUT0000008C PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000008D
         2 ZUT0000008D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000008E
         2 ZUT0000008E PICTURE X(4).
      *    *** EIBTASKN : ZUT0000008F
         2 ZUT0000008F PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT00000090
         2 ZUT00000090 PICTURE X(4).
      *    *** DFHEIGDI : ZUT00000091
         2 ZUT00000091 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000092
         2 ZUT00000092 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000093
         2 ZUT00000093 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000094
         2 ZUT00000094 PICTURE X(1).
      *    *** EIBFN : ZUT00000095
         2 ZUT00000095 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000096
         2 ZUT00000096 PICTURE X(6).
      *    *** EIBDS : ZUT00000097
         2 ZUT00000097 PICTURE X(8).
      *    *** EIBREQID : ZUT00000098
         2 ZUT00000098 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000099
         2 ZUT00000099 PICTURE X(8).
      *    *** EIBSYNC : ZUT0000009A
         2 ZUT0000009A PICTURE X.
      *    *** EIBFREE : ZUT0000009B
         2 ZUT0000009B PICTURE X.
      *    *** EIBRECV : ZUT0000009C
         2 ZUT0000009C PICTURE X.
      *    *** EIBSEND : ZUT0000009D
         2 ZUT0000009D PICTURE X.
      *    *** EIBATT : ZUT0000009E
         2 ZUT0000009E PICTURE X.
      *    *** EIBEOC : ZUT0000009F
         2 ZUT0000009F PICTURE X.
      *    *** EIBFMH : ZUT000000A0
         2 ZUT000000A0 PICTURE X.
      *    *** EIBCOMPL : ZUT000000A1
         2 ZUT000000A1 PICTURE X(1).
      *    *** EIBSIG : ZUT000000A2
         2 ZUT000000A2 PICTURE X(1).
      *    *** EIBCONF : ZUT000000A3
         2 ZUT000000A3 PICTURE X(1).
      *    *** EIBERR : ZUT000000A4
         2 ZUT000000A4 PICTURE X(1).
      *    *** EIBERRCD : ZUT000000A5
         2 ZUT000000A5 PICTURE X(4).
      *    *** EIBSYNRB : ZUT000000A6
         2 ZUT000000A6 PICTURE X.
      *    *** EIBNODAT : ZUT000000A7
         2 ZUT000000A7 PICTURE X.
      *    *** EIBRESP : ZUT000000A8
         2 ZUT000000A8 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT000000A9
         2 ZUT000000A9 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT000000AA
         2 ZUT000000AA PICTURE X(1).
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_4A04_LGICDB01.
           ENTRY 'CICS_INPT_4A04_LGICDB01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT0000008B AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10 ARG11 ARG12 ARG13
           ARG14 ARG15 ARG16 ARG17 ARG18 ARG19 ARG20 ARG21 ARG22
           ARG23 ARG24 ARG25 ARG26.
           DISPLAY 'AZU0000I CICS_4A04_LGICDB01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'800200000008000000' TO AZ-OPT-COMMASK-DATA9(1).
      * EXEC CICS FORMATTIME X'800200000008000000'
           IF ARG0-1 = X'4A04'
             MOVE X'800200000008000000' TO AZ-OPT-MASK-DATA9
             MOVE 9 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA9
               AZ-OPT-COMMASK-DATA9(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 7 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS FORMATTIME X''800200000008000
      -    '000'''
                ' L=' AZ-LINE-NUM
               MOVE 4 TO AZ-GRP-INDEX
               MOVE 0 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_4A04_LGICDB01.
           ENTRY 'CICS_OUTP_4A04_LGICDB01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT0000008B AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10 ARG11 ARG12 ARG13
           ARG14 ARG15 ARG16 ARG17 ARG18 ARG19 ARG20 ARG21 ARG22
           ARG23 ARG24 ARG25 ARG26.
           DISPLAY 'AZU0000I CICS_4A04_LGICDB01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'800200000008000000' TO AZ-OPT-COMMASK-DATA9(1).
      * EXEC CICS FORMATTIME X'800200000008000000'
           IF ARG0-1 = X'4A04'
             MOVE X'800200000008000000' TO AZ-OPT-MASK-DATA9
             MOVE 9 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA9
               AZ-OPT-COMMASK-DATA9(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-OPT-RC = 0 THEN
               MOVE 7 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS FORMATTIME X''800200000008000
      -    '000'''
                ' L=' AZ-LINE-NUM
               MOVE 4 TO AZ-GRP-INDEX
               MOVE 1 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 4
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       TEARDOWN.
           DISPLAY 'AZU0000I CICS_4A04_LGICDB01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'CICS_4A04_LGICDB01'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC CICS LINK                                    |
      *|    FUNCTION CODE: 0E02                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'CICS_0E02_LGICDB01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM CICS CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN       PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-OPT-MASK-DATA2  PIC X(2).
       01 AZ-OPT-MASK-DATA9  PIC X(9).
       01 AZ-OPT-MASK-DATA11 PIC X(11).
       01 AZ-OPT-MASK-DATA19 PIC X(19).
       01 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       01 AZ-OPT-RC          PIC 9(1) VALUE 0.
       01 AZ-OPT-COMMASK.
         03  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         03  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       01 AZ-LINE-BYTE      PIC S9(2) COMP.
       01 AZ-LINE-NUM       PIC 9(5).
       01 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         03 AZ-LINE-NUM-RD  PIC 9(1) OCCURS 5.
       01 AZ-LINE-I         PIC S9(8) COMP.
       01 AZ-LINE-J         PIC S9(8) COMP.
       01 AZ-RC-WORK        PIC S9(4) USAGE BINARY.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 AZ-MODX                   PIC X(4).
       01 AZ-DFHEIBLK.
         03 FILLER                  PIC X(85).
       01 AZ-DFHCOMMAREA.
         03 FILLER                  PIC X(1).
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 ARG2            POINTER.
       01 ARG3            POINTER.
       01 ARG4            POINTER.
       01 ARG5            POINTER.
       01 ARG6            POINTER.
       01 ARG7            POINTER.
       01 ARG8            POINTER.
       01 ARG9            POINTER.
       01 ARG10           POINTER.
       01 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       01 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       01 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
      *  *** DFHEIBLK : ZUT0000008B
       1 ZUT0000008B.
      *    *** EIBTIME : ZUT0000008C
         2 ZUT0000008C PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBDATE : ZUT0000008D
         2 ZUT0000008D PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRNID : ZUT0000008E
         2 ZUT0000008E PICTURE X(4).
      *    *** EIBTASKN : ZUT0000008F
         2 ZUT0000008F PICTURE S9(7) USAGE COMPUTATIONAL-3.
      *    *** EIBTRMID : ZUT00000090
         2 ZUT00000090 PICTURE X(4).
      *    *** DFHEIGDI : ZUT00000091
         2 ZUT00000091 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCPOSN : ZUT00000092
         2 ZUT00000092 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBCALEN : ZUT00000093
         2 ZUT00000093 PICTURE S9(4) USAGE COMPUTATIONAL-5.
      *    *** EIBAID : ZUT00000094
         2 ZUT00000094 PICTURE X(1).
      *    *** EIBFN : ZUT00000095
         2 ZUT00000095 PICTURE X(2).
      *    *** EIBRCODE : ZUT00000096
         2 ZUT00000096 PICTURE X(6).
      *    *** EIBDS : ZUT00000097
         2 ZUT00000097 PICTURE X(8).
      *    *** EIBREQID : ZUT00000098
         2 ZUT00000098 PICTURE X(8).
      *    *** EIBRSRCE : ZUT00000099
         2 ZUT00000099 PICTURE X(8).
      *    *** EIBSYNC : ZUT0000009A
         2 ZUT0000009A PICTURE X.
      *    *** EIBFREE : ZUT0000009B
         2 ZUT0000009B PICTURE X.
      *    *** EIBRECV : ZUT0000009C
         2 ZUT0000009C PICTURE X.
      *    *** EIBSEND : ZUT0000009D
         2 ZUT0000009D PICTURE X.
      *    *** EIBATT : ZUT0000009E
         2 ZUT0000009E PICTURE X.
      *    *** EIBEOC : ZUT0000009F
         2 ZUT0000009F PICTURE X.
      *    *** EIBFMH : ZUT000000A0
         2 ZUT000000A0 PICTURE X.
      *    *** EIBCOMPL : ZUT000000A1
         2 ZUT000000A1 PICTURE X(1).
      *    *** EIBSIG : ZUT000000A2
         2 ZUT000000A2 PICTURE X(1).
      *    *** EIBCONF : ZUT000000A3
         2 ZUT000000A3 PICTURE X(1).
      *    *** EIBERR : ZUT000000A4
         2 ZUT000000A4 PICTURE X(1).
      *    *** EIBERRCD : ZUT000000A5
         2 ZUT000000A5 PICTURE X(4).
      *    *** EIBSYNRB : ZUT000000A6
         2 ZUT000000A6 PICTURE X.
      *    *** EIBNODAT : ZUT000000A7
         2 ZUT000000A7 PICTURE X.
      *    *** EIBRESP : ZUT000000A8
         2 ZUT000000A8 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRESP2 : ZUT000000A9
         2 ZUT000000A9 PICTURE S9(8) USAGE COMPUTATIONAL.
      *    *** EIBRLDBK : ZUT000000AA
         2 ZUT000000AA PICTURE X(1).
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * CICS_INPT_0E02_LGICDB01.
           ENTRY 'CICS_INPT_0E02_LGICDB01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT0000008B AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10.
           DISPLAY 'AZU0000I CICS_0E02_LGICDB01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'E000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS LINK "LGSTSQ" X'E000'
           IF ARG0-1 = X'0E02'
             SET ADDRESS OF AZ-CICS-TARGET-NAME-DEF8 TO ADDRESS OF ARG1
             MOVE X'E000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-CICS-TARGET-NAME-DEF8 = 'LGSTSQ' AND
                AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS LINK "LGSTSQ" X''E000'''
               ' L=' AZ-LINE-NUM
               MOVE 5 TO AZ-GRP-INDEX
               MOVE 0 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * CICS_OUTP_0E02_LGICDB01.
           ENTRY 'CICS_OUTP_0E02_LGICDB01' USING AZ-TEST
           AZ-INFO-BLOCK ZUT0000008B AZ-DFHCOMMAREA ARG0 ARG1 ARG2
           ARG3 ARG4 ARG5 ARG6 ARG7 ARG8 ARG9 ARG10.
           DISPLAY 'AZU0000I CICS_0E02_LGICDB01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'E000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS LINK "LGSTSQ" X'E000'
           IF ARG0-1 = X'0E02'
             SET ADDRESS OF AZ-CICS-TARGET-NAME-DEF8 TO ADDRESS OF ARG1
             MOVE X'E000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             MOVE AZ-RC-WORK TO RETURN-CODE
             IF AZ-CICS-TARGET-NAME-DEF8 = 'LGSTSQ' AND
                AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'AZU0000I EXEC CICS LINK "LGSTSQ" X''E000'''
               ' L=' AZ-LINE-NUM
               MOVE 5 TO AZ-GRP-INDEX
               MOVE 1 TO AZ-FLAG-IN
               MOVE RETURN-CODE TO AZ-RC-WORK
               CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
                 AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
               SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
               MOVE AZ-RC-WORK TO RETURN-CODE
               ADD 1 TO AZ-WK-RECORD-COUNT
               MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
               EVALUATE AZ-TEST(1:AZ-TEST-LEN)
                 WHEN SPACE
                   CONTINUE
                 WHEN OTHER
                   CONTINUE
                 END-EVALUATE
             END-IF
           END-IF.
           PERFORM TEARDOWN.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 4
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       TEARDOWN.
           DISPLAY 'AZU0000I CICS_0E02_LGICDB01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'CICS_0E02_LGICDB01'.
      *+---------------------------------------------------------------+
      *| PROGRAM FOR EXEC SQL SELECT_INTO                              |
      *|    FUNCTION CODE: 00E7                                        |
      *|                                                               |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'DB2_00E7_LGICDB01'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM DB2 CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 AZ-TEST-LEN        PIC S9(8) COMP.
       01 AZ-RECORD.
         03 AZ-RECORD-COUNT-OT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-RECORD-COUNT-IN OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
         03 AZ-OUT-PARM-NUM  PIC 9(8).
         03 AZ-IN-PARM-NUM   PIC 9(8).
         03 AZ-STMT-NUM      PIC 9(9).
       01 AZ-GRP-INDEX       PIC 9(8).
       01 AZ-FLAG-IN         PIC 9(1).
       01 AZ-RECORD-PTR      POINTER.
       01 AZ-RC-WORK         PIC S9(4) USAGE BINARY.
       1 AZ-TEST-INPUT-DATA-VALUE.
          3 AZU00000000.
            5 PIC X(6) DISPLAY VALUE 'Wissem'.
            5 PIC X(4) DISPLAY VALUE SPACES.
          3 AZU00000001.
            5 PIC X(7) DISPLAY VALUE 'Mathieu'.
            5 PIC X(3) DISPLAY VALUE SPACES.
       LOCAL-STORAGE SECTION.
       01 AZ-HOSTVAR-PTR     POINTER.
       01 AZ-HOSTVAR-PTR-ADDR
           REDEFINES AZ-HOSTVAR-PTR PIC 9(9) COMP-5.
       LINKAGE SECTION.
       01 AZ-TEST            PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY BZUITERC.
       01 AZ-APLIST.
          COPY BZUDB2CP.
       01 AZ-WK-RECORD-COUNT PIC 9(5) COMP-5.
       01 ARGO1.
          COPY BZUDB2CV.
       01 ARGI1          .
          COPY BZUDB2CV.
       01 ARGI2          .
          COPY BZUDB2CV.
       01 ARGI3          .
          COPY BZUDB2CV.
       01 ARGI4          .
          COPY BZUDB2CV.
       01 ARGI5          .
          COPY BZUDB2CV.
       01 ARGI6          .
          COPY BZUDB2CV.
       01 ARGI7          .
          COPY BZUDB2CV.
       01 ARGI8          .
          COPY BZUDB2CV.
       01 ARGI9          .
          COPY BZUDB2CV.
       1 AZU00000002.
      *    *** DB2-CUSTOMERNUMBER-INT : ZUT0000001F
         3 ZUT0000001F PIC S9(9) COMP.
       1 AZU00000003.
      *    *** CA-FIRST-NAME : ZUT000000B1
         5 ZUT000000B1 PIC X(10).
       1 AZU00000004.
      *    *** CA-LAST-NAME : ZUT000000B2
         5 ZUT000000B2 PIC X(20).
       1 AZU00000005.
      *    *** CA-DOB : ZUT000000B3
         5 ZUT000000B3 PIC X(10).
       1 AZU00000006.
      *    *** CA-HOUSE-NAME : ZUT000000B4
         5 ZUT000000B4 PIC X(20).
       1 AZU00000007.
      *    *** CA-HOUSE-NUM : ZUT000000B5
         5 ZUT000000B5 PIC X(4).
       1 AZU00000008.
      *    *** CA-POSTCODE : ZUT000000B6
         5 ZUT000000B6 PIC X(8).
       1 AZU00000009.
      *    *** CA-PHONE-MOBILE : ZUT000000B8
         5 ZUT000000B8 PIC X(20).
       1 AZU0000000A.
      *    *** CA-PHONE-HOME : ZUT000000B9
         5 ZUT000000B9 PIC X(20).
       1 AZU0000000B.
      *    *** CA-EMAIL-ADDRESS : ZUT000000BA
         5 ZUT000000BA PIC X(100).
      *  *** SQLCA : ZUT00000075
       1 ZUT00000075.
      *    *** SQLCAID : ZUT00000076
         5 ZUT00000076 PIC X(8).
      *    *** SQLCABC : ZUT00000077
         5 ZUT00000077 PIC S9(9) BINARY.
      *    *** SQLCODE : ZUT00000078
         5 ZUT00000078 PIC S9(9) BINARY.
      *    *** SQLERRM : ZUT00000079
         5 ZUT00000079.
      *    *** SQLERRML : ZUT0000007A
         49 ZUT0000007A PIC S9(4) BINARY.
      *    *** SQLERRMC : ZUT0000007B
         49 ZUT0000007B PIC X(70).
      *    *** SQLERRP : ZUT0000007C
         5 ZUT0000007C PIC X(8).
      *    *** SQLERRD : ZUT0000007D
         5 ZUT0000007D OCCURS 6 TIMES PIC S9(9) BINARY.
      *    *** SQLWARN : ZUT0000007E
         5 ZUT0000007E.
      *    *** SQLWARN0 : ZUT0000007F
         10 ZUT0000007F PIC X.
      *    *** SQLWARN1 : ZUT00000080
         10 ZUT00000080 PIC X.
      *    *** SQLWARN2 : ZUT00000081
         10 ZUT00000081 PIC X.
      *    *** SQLWARN3 : ZUT00000082
         10 ZUT00000082 PIC X.
      *    *** SQLWARN4 : ZUT00000083
         10 ZUT00000083 PIC X.
      *    *** SQLWARN5 : ZUT00000084
         10 ZUT00000084 PIC X.
      *    *** SQLWARN6 : ZUT00000085
         10 ZUT00000085 PIC X.
      *    *** SQLWARN7 : ZUT00000086
         10 ZUT00000086 PIC X.
      *    *** SQLWARN8 : ZUT00000087
         10 ZUT00000087 PIC X.
      *    *** SQLWARN9 : ZUT00000088
         10 ZUT00000088 PIC X.
      *    *** SQLWARNA : ZUT00000089
         10 ZUT00000089 PIC X.
      *    *** SQLSTATE : ZUT0000008A
         5 ZUT0000008A PIC X(5).
       01 AZ-SQLDA.
          COPY BZUDB2CA.
       PROCEDURE DIVISION.
      * CHECK OUTPUT VALUE
      * DB2_INPT_00E7_LGICDB01.
           ENTRY 'DB2_INPT_00E7_LGICDB01' USING AZ-TEST
           AZ-INFO-BLOCK AZ-APLIST ARGO1.
           DISPLAY 'AZU0000I DB2_00E7_LGICDB01 CHECK VALUES...'
           MOVE 4 TO RETURN-CODE.
           MOVE SQL-STMT-NUM OF AZ-APLIST TO AZ-STMT-NUM
           SET ADDRESS OF AZ-SQLDA TO SQL-VPARMPTR
           MOVE SQLDA-NUM OF AZ-SQLDA TO AZ-OUT-PARM-NUM
           SET ADDRESS OF AZ-SQLDA TO SQL-APARMPTR
           MOVE SQLDA-NUM OF AZ-SQLDA TO AZ-IN-PARM-NUM
           SET ADDRESS OF ZUT00000075 TO SQL-CODEPTR OF AZ-APLIST
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * EXEC SQL SELECT_INTO : OUT=1 IN=9
           IF AZ-OUT-PARM-NUM = 1 AND
              AZ-IN-PARM-NUM = 9 THEN
             DISPLAY 'AZU0000I EXEC SQL SELECT_INTO'
              ' : OUT=' 1 ' IN=' 9
              ' L=' AZ-STMT-NUM
             MOVE SQL-AVAR-ADDR OF ARGO1 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000002
             TO AZ-HOSTVAR-PTR
             MOVE 6 TO AZ-GRP-INDEX
             MOVE 0 TO AZ-FLAG-IN
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
               AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
             SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
             MOVE AZ-RC-WORK TO RETURN-CODE
             ADD 1 TO AZ-WK-RECORD-COUNT
             MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-OT(1)
             EVALUATE AZ-TEST(1:AZ-TEST-LEN)
               WHEN SPACE
                 CONTINUE
               WHEN 'TEST2'
                 CONTINUE
               WHEN 'TEST3'
                 CONTINUE
               WHEN OTHER
                 CONTINUE
             END-EVALUATE
           END-IF.
           PERFORM TEARDOWN.
      * SET INPUT VALUE
      * DB2_OUTP_00E7_LGICDB01.
           ENTRY 'DB2_OUTP_00E7_LGICDB01' USING AZ-TEST
           AZ-INFO-BLOCK AZ-APLIST ARGI1 ARGI2 ARGI3 ARGI4 ARGI5 ARGI6
           ARGI7 ARGI8 ARGI9.
           DISPLAY 'AZU0000I DB2_00E7_LGICDB01 INPUT VALUES...'
           MOVE 0 TO RETURN-CODE.
           MOVE SQL-STMT-NUM OF AZ-APLIST TO AZ-STMT-NUM
           SET ADDRESS OF AZ-SQLDA TO SQL-VPARMPTR
           MOVE SQLDA-NUM OF AZ-SQLDA TO AZ-OUT-PARM-NUM
           SET ADDRESS OF AZ-SQLDA TO SQL-APARMPTR
           MOVE SQLDA-NUM OF AZ-SQLDA TO AZ-IN-PARM-NUM
           SET ADDRESS OF ZUT00000075 TO SQL-CODEPTR OF AZ-APLIST
           MOVE 0 TO AZ-TEST-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * EXEC SQL SELECT_INTO : OUT=1 IN=9
           IF AZ-OUT-PARM-NUM = 1 AND
              AZ-IN-PARM-NUM = 9 THEN
             DISPLAY 'AZU0000I EXEC SQL SELECT_INTO'
              ' : OUT=' 1 ' IN=' 9
              ' L=' AZ-STMT-NUM
             MOVE SQL-AVAR-ADDR OF ARGI1 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000003
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI2 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000004
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI3 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000005
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI4 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000006
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI5 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000007
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI6 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000008
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI7 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU00000009
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI8 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU0000000A
             TO AZ-HOSTVAR-PTR
             MOVE SQL-AVAR-ADDR OF ARGI9 TO AZ-HOSTVAR-PTR-ADDR
             SET ADDRESS OF AZU0000000B
             TO AZ-HOSTVAR-PTR
             MOVE 6 TO AZ-GRP-INDEX
             MOVE 1 TO AZ-FLAG-IN
             MOVE RETURN-CODE TO AZ-RC-WORK
             CALL 'GTMEMRC' USING TC-WORK-AREA OF AZ-INFO-BLOCK
               AZ-GRP-INDEX AZ-FLAG-IN AZ-RECORD-PTR
             SET ADDRESS OF AZ-WK-RECORD-COUNT TO AZ-RECORD-PTR
             MOVE AZ-RC-WORK TO RETURN-CODE
             ADD 1 TO AZ-WK-RECORD-COUNT
             MOVE AZ-WK-RECORD-COUNT TO AZ-RECORD-COUNT-IN(1)
             EVALUATE AZ-TEST(1:AZ-TEST-LEN)
               WHEN SPACE
                 CONTINUE
               WHEN 'TEST2'
                 PERFORM I00E70-TEST2
                 CONTINUE
               WHEN 'TEST3'
                 PERFORM I00E70-TEST3
                 CONTINUE
               WHEN OTHER
                 CONTINUE
             END-EVALUATE
           END-IF.
           PERFORM TEARDOWN.
       I00E70-TEST2.
           IF AZ-RECORD-COUNT-IN(1) = 0 THEN
             CONTINUE
           ELSE IF AZ-RECORD-COUNT-IN(1) = 1
           MOVE AZU00000000 TO ZUT000000B1 OF AZU00000003
           ELSE
             CONTINUE
           END-IF
           END-IF.
       I00E70-TEST3.
           IF AZ-RECORD-COUNT-IN(1) = 0 THEN
             CONTINUE
           ELSE IF AZ-RECORD-COUNT-IN(1) = 1
           MOVE AZU00000001 TO ZUT000000B1 OF AZU00000003
           ELSE
             CONTINUE
           END-IF
           END-IF.
       TEARDOWN.
           DISPLAY 'AZU0000I DB2_00E7_LGICDB01 SUCCESSFUL.'
           GOBACK.
       END PROGRAM 'DB2_00E7_LGICDB01'.
